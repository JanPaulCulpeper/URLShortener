{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nvar Signup = function Signup() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var authToken = useSelector(authSelectors.selectAuthToken);\n  var loading = useSelector(authSelectors.selectLoading);\n  var cpassword = values.cpassword,\n      password = values.password,\n      userName = values.userName,\n      email = values.email;\n  var authError = useSelector(authSelectors.selectError);\n  var onSignup = React.useCallback(function () {\n    if (cpassword !== password) {\n      toast(\"Passwords don't match!\", {\n        type: 'error'\n      });\n    } else {\n      dispatch(authActions.signup({\n        email: email,\n        password: password,\n        userName: userName\n      }));\n    }\n  }, [values, dispatch, authActions]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    onSignup();\n  };\n\n  React.useEffect(function () {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      Object.keys(authError).map(function (key) {\n        return authError[key] && toast(authError[key], {\n          type: 'error'\n        });\n      });\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n  return __jsx(React.Fragment, null, !authToken && loading ? __jsx(LinearProgress, null) : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Signup\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Create Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'User name',\n      id: 'userName',\n      type: 'text'\n    }, {\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }, {\n      label: 'Confirm Password',\n      id: 'cpassword',\n      type: 'password'\n    }],\n    LowerText: {\n      info: 'Already have an account?',\n      link: {\n        name: 'Login',\n        ref: '/login'\n      }\n    }\n  })));\n};\n\n_s(Signup, \"a8JqLQZBk7siXzLq7FqkrjbQcqk=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/signup.js"
    ],
    "names": [
      "React",
      "useDispatch",
      "useSelector",
      "useRouter",
      "ToastContainer",
      "toast",
      "Navigation",
      "Form",
      "authSelectors",
      "authActions",
      "Signup",
      "router",
      "dispatch",
      "useState",
      "values",
      "setValues",
      "authToken",
      "selectAuthToken",
      "loading",
      "selectLoading",
      "cpassword",
      "password",
      "userName",
      "email",
      "authError",
      "selectError",
      "onSignup",
      "useCallback",
      "type",
      "signup",
      "handleSubmit",
      "e",
      "preventDefault",
      "useEffect",
      "push",
      "Object",
      "keys",
      "map",
      "key",
      "clearError",
      "title",
      "ref",
      "label",
      "id",
      "info",
      "link",
      "name"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const { cpassword, password, userName, email } = values;\n  const authError = useSelector(authSelectors.selectError);\n  const onSignup = React.useCallback(() => {\n    if (cpassword !== password) {\n      toast(\"Passwords don't match!\", { type: 'error' });\n    } else {\n      dispatch(\n        authActions.signup({\n          email,\n          password,\n          userName\n        })\n      );\n    }\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSignup();\n  };\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n    if (authError) {\n      Object.keys(authError).map(\n        (key) => authError[key] && toast(authError[key], { type: 'error' })\n      );\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n\n  return (\n    <>\n      {!authToken && loading ? (\n        <LinearProgress />\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"Signup\"\n            Links={[\n              {\n                title: 'Home',\n                ref: '/'\n              }\n            ]}\n          />\n\n          <Form\n            Title=\"Create Account\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'User name', id: 'userName', type: 'text' },\n              { label: 'Email', id: 'email', type: 'email' },\n              { label: 'Password', id: 'password', type: 'password' },\n              { label: 'Confirm Password', id: 'cpassword', type: 'password' }\n            ]}\n            LowerText={{\n              info: 'Already have an account?',\n              link: {\n                name: 'Login',\n                ref: '/login'\n              }\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Signup;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
