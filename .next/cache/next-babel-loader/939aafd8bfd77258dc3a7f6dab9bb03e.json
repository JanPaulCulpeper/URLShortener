{
  "ast": null,
  "code": "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar, MenuItem, Popper, IconButton, Paper, MenuList, Grow, ClickAwayListener } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    paper: {\n      marginRight: theme.spacing(2)\n    },\n    avatar: {\n      backgroundColor: purple[500]\n    }\n  };\n});\n\nvar UserIcon = function UserIcon(_ref) {\n  _s();\n\n  var Letter = _ref.Letter,\n      Actions = _ref.Actions;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  var prevOpen = React.useRef(open);\n  React.useEffect(function () {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(React.Fragment, null, __jsx(IconButton, {\n    ref: anchorRef,\n    \"aria-controls\": open ? 'menu-list-grow' : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, Letter)), __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", null, __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, function (_ref2) {\n    var TransitionProps = _ref2.TransitionProps,\n        placement = _ref2.placement;\n    return __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      }\n    }), __jsx(Paper, null, __jsx(ClickAwayListener, {\n      onClickAway: handleClose\n    }, __jsx(MenuList, {\n      autoFocusItem: open,\n      id: \"menu-list-grow\",\n      onKeyDown: handleListKeyDown\n    }, Actions.map(function (action) {\n      return __jsx(MenuItem, {\n        onClick: handleClose\n      }, \"Dashboard\");\n    })))));\n  }))));\n};\n\n_s(UserIcon, \"U8jTkOa8UNZB+VqxzZ/A29KzAyQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserIcon;\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\nexport default UserIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserIcon\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/components/UserIcon/index.js"
    ],
    "names": [
      "React",
      "Avatar",
      "MenuItem",
      "Popper",
      "IconButton",
      "Paper",
      "MenuList",
      "Grow",
      "ClickAwayListener",
      "makeStyles",
      "purple",
      "PropTypes",
      "useStyles",
      "theme",
      "root",
      "display",
      "paper",
      "marginRight",
      "spacing",
      "avatar",
      "backgroundColor",
      "UserIcon",
      "Letter",
      "Actions",
      "classes",
      "useState",
      "open",
      "setOpen",
      "anchorRef",
      "useRef",
      "handleToggle",
      "prevOpen",
      "handleClose",
      "event",
      "current",
      "contains",
      "target",
      "handleListKeyDown",
      "key",
      "preventDefault",
      "useEffect",
      "focus",
      "undefined",
      "TransitionProps",
      "placement",
      "transformOrigin",
      "map",
      "action",
      "propTypes",
      "string",
      "defaultProps"
    ],
    "mappings": ";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,MADF,EAEEC,QAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,iBARF,QASO,mBATP;AAUA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADR,KAJgC;AAOvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,eAAe,EAAEV,MAAM,CAAC,GAAD;AADjB;AAP+B,GAAZ;AAAA,CAAD,CAA5B;;AAYA,IAAMW,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA;;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACxC,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AADwC,wBAEhBZ,KAAK,CAACyB,QAAN,CAAe,KAAf,CAFgB;AAAA;AAAA,MAEjCC,IAFiC;AAAA,MAE3BC,OAF2B;;AAGxC,MAAMC,SAAS,GAAG5B,KAAK,CAAC6B,MAAN,CAAa,IAAb,CAAlB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBH,IAAAA,OAAO,CAAC,UAACI,QAAD;AAAA,aAAc,CAACA,QAAf;AAAA,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,QAAIL,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,QAAlB,CAA2BF,KAAK,CAACG,MAAjC,CAAzB,EAAmE;AACjE;AACD;;AAEDT,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAQA,WAASU,iBAAT,CAA2BJ,KAA3B,EAAkC;AAChC,QAAIA,KAAK,CAACK,GAAN,KAAc,KAAlB,EAAyB;AACvBL,MAAAA,KAAK,CAACM,cAAN;AACAZ,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAtBuC,CAwBxC;;;AACA,MAAMI,QAAQ,GAAG/B,KAAK,CAAC6B,MAAN,CAAaH,IAAb,CAAjB;AACA1B,EAAAA,KAAK,CAACwC,SAAN,CAAgB,YAAM;AACpB,QAAIT,QAAQ,CAACG,OAAT,KAAqB,IAArB,IAA6BR,IAAI,KAAK,KAA1C,EAAiD;AAC/CE,MAAAA,SAAS,CAACM,OAAV,CAAkBO,KAAlB;AACD;;AAEDV,IAAAA,QAAQ,CAACG,OAAT,GAAmBR,IAAnB;AACD,GAND,EAMG,CAACA,IAAD,CANH;AAOA,SACE,4BACE,MAAC,UAAD;AACE,IAAA,GAAG,EAAEE,SADP;AAEE,qBAAeF,IAAI,GAAG,gBAAH,GAAsBgB,SAF3C;AAGE,qBAAc,MAHhB;AAIE,IAAA,OAAO,EAAEZ;AAJX,KAME,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEN,OAAO,CAACL;AAA3B,KAAoCG,MAApC,CANF,CADF,EASE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACV;AAAxB,KACE,mBACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAEY,IADR;AAEE,IAAA,QAAQ,EAAEE,SAAS,CAACM,OAFtB;AAGE,IAAA,IAAI,EAAEQ,SAHR;AAIE,IAAA,UAAU,MAJZ;AAKE,IAAA,aAAa;AALf,KAOG;AAAA,QAAGC,eAAH,SAAGA,eAAH;AAAA,QAAoBC,SAApB,SAAoBA,SAApB;AAAA,WACC,MAAC,IAAD,eACMD,eADN;AAEE,MAAA,KAAK,EAAE;AACLE,QAAAA,eAAe,EACbD,SAAS,KAAK,QAAd,GAAyB,YAAzB,GAAwC;AAFrC;AAFT,QAOE,MAAC,KAAD,QACE,MAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEZ;AAAhC,OACE,MAAC,QAAD;AACE,MAAA,aAAa,EAAEN,IADjB;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,SAAS,EAAEW;AAHb,OAKGd,OAAO,CAACuB,GAAR,CAAY,UAACC,MAAD,EAAY;AACvB,aACE,MAAC,QAAD;AAAU,QAAA,OAAO,EAAEf;AAAnB,qBADF;AAGD,KAJA,CALH,CADF,CADF,CAPF,CADD;AAAA,GAPH,CADF,CADF,CATF,CADF;AAiDD,CAlFD;;GAAMX,Q;UACYT,S;;;KADZS,Q;AAoFNA,QAAQ,CAAC2B,SAAT,GAAqB;AACnB1B,EAAAA,MAAM,EAAEX,SAAS,CAACsC;AADC,CAArB;AAIA5B,QAAQ,CAAC6B,YAAT,GAAwB;AACtB5B,EAAAA,MAAM,EAAE;AADc,CAAxB;AAIA,eAAeD,QAAf",
    "sourcesContent": [
      "import React from 'react';\n\nimport {\n  Avatar,\n  MenuItem,\n  Popper,\n  IconButton,\n  Paper,\n  MenuList,\n  Grow,\n  ClickAwayListener\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({ Letter, Actions }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return (\n    <>\n      <IconButton\n        ref={anchorRef}\n        aria-controls={open ? 'menu-list-grow' : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n      >\n        <Avatar className={classes.avatar}>{Letter}</Avatar>\n      </IconButton>\n      <div className={classes.root}>\n        <div>\n          <Popper\n            open={open}\n            anchorEl={anchorRef.current}\n            role={undefined}\n            transition\n            disablePortal\n          >\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin:\n                    placement === 'bottom' ? 'center top' : 'center bottom'\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList\n                      autoFocusItem={open}\n                      id=\"menu-list-grow\"\n                      onKeyDown={handleListKeyDown}\n                    >\n                      {Actions.map((action) => {\n                        return (\n                          <MenuItem onClick={handleClose}>Dashboard</MenuItem>\n                        );\n                      })}\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n        </div>\n      </div>\n    </>\n  );\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\n\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\n\nexport default UserIcon;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
