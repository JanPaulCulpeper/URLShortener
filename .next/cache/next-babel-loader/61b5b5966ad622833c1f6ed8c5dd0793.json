{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar jwt = require('jsonwebtoken');\n\nvar User = require('../models/user');\n\nvar handleErrors = function handleErrors(err) {\n  var errors = {\n    email: '',\n    password: ''\n  };\n\n  if (err.message.includes('Incorrect email')) {\n    errors.email = 'The email you entered is not valid';\n  }\n\n  if (err.message.includes('Incorrect password')) {\n    errors.password = 'The password you entered is incorrect';\n  }\n\n  if (err.code === 11000) {\n    errors.email = 'The email you entered is already registered';\n  }\n\n  if (err.message.includes('user validation failed')) {\n    Object.values(err.errors).forEach(function (_ref) {\n      var properties = _ref.properties;\n      errors[properties.path] = properties.message;\n    });\n  }\n\n  return errors;\n};\n\nvar maxAge = 3 * 24 * 60 * 60;\n\nvar createToken = function createToken(id) {\n  return jwt.sign({\n    id: id\n  }, process.env.JWT_SECRET, {\n    expiresIn: maxAge\n  });\n};\n\nvar signupPost = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, email, password, userName, user, token, errors;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, email = _req$body.email, password = _req$body.password, userName = _req$body.userName;\n            _context.prev = 1;\n            _context.next = 4;\n            return User.create({\n              email: email,\n              password: password,\n              userName: userName\n            });\n\n          case 4:\n            user = _context.sent;\n            token = createToken(user._id);\n            res.cookie('urlshort', token, {\n              httpOnly: true,\n              maxAge: maxAge * 1000\n            });\n            res.status(201).json({\n              user: user\n            });\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            errors = handleErrors(_context.t0);\n            res.status(400).json({\n              errors: errors\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 10]]);\n  }));\n\n  return function signupPost(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar loginPost = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user, token, errors;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return User.login(email, password);\n\n          case 4:\n            user = _context2.sent;\n            token = createToken(user);\n            res.cookie('urlshort', token, {\n              httpOnly: true,\n              maxAge: maxAge * 1000\n            });\n            res.status(200).json({\n              user: user\n            });\n            _context2.next = 14;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            errors = handleErrors(_context2.t0);\n            res.status(400).json({\n              errors: errors\n            });\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 10]]);\n  }));\n\n  return function loginPost(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar logoutGet = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return res.cookie('jwt', '', {\n              maxAge: 1\n            });\n\n          case 2:\n            res.status(200).json({\n              user: null\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function logoutGet(_x5, _x6) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nvar verifyAuth = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(req, res) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            token = req.cookies.urlshort;\n\n            if (token) {\n              jwt.verify(token, process.env.JWT_SECRET, function (err, decodedToken) {\n                if (err) {\n                  res.json({\n                    user: null\n                  });\n                } else {\n                  res.status(200).json({\n                    user: decodedToken.id\n                  });\n                }\n              });\n            } else {\n              res.json({\n                user: null\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function verifyAuth(_x7, _x8) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  verifyAuth: verifyAuth,\n  signupPost: signupPost,\n  loginPost: loginPost,\n  logoutGet: logoutGet\n};","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/controllers/auth.js"],"names":["jwt","require","User","handleErrors","err","errors","email","password","message","includes","code","Object","values","forEach","properties","path","maxAge","createToken","id","sign","process","env","JWT_SECRET","expiresIn","signupPost","req","res","body","userName","create","user","token","_id","cookie","httpOnly","status","json","loginPost","login","logoutGet","verifyAuth","cookies","urlshort","verify","decodedToken","module","exports"],"mappings":"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","sourcesContent":["const jwt = require('jsonwebtoken');\nconst User = require('../models/user');\n\nconst handleErrors = (err) => {\n  const errors = { email: '', password: '' };\n\n  if (err.message.includes('Incorrect email')) {\n    errors.email = 'The email you entered is not valid';\n  }\n  if (err.message.includes('Incorrect password')) {\n    errors.password = 'The password you entered is incorrect';\n  }\n  if (err.code === 11000) {\n    errors.email = 'The email you entered is already registered';\n  }\n  if (err.message.includes('user validation failed')) {\n    Object.values(err.errors).forEach(({ properties }) => {\n      errors[properties.path] = properties.message;\n    });\n  }\n\n  return errors;\n};\n\nconst maxAge = 3 * 24 * 60 * 60;\nconst createToken = (id) => {\n  return jwt.sign({ id }, process.env.JWT_SECRET, {\n    expiresIn: maxAge\n  });\n};\n\nconst signupPost = async (req, res) => {\n  const { email, password, userName } = req.body;\n\n  try {\n    const user = await User.create({ email, password, userName });\n    const token = createToken(user._id);\n    res.cookie('urlshort', token, { httpOnly: true, maxAge: maxAge * 1000 });\n    res.status(201).json({ user });\n  } catch (err) {\n    const errors = handleErrors(err);\n    res.status(400).json({ errors });\n  }\n};\nconst loginPost = async (req, res) => {\n  const { email, password } = req.body;\n\n  try {\n    const user = await User.login(email, password);\n    const token = createToken(user);\n    res.cookie('urlshort', token, { httpOnly: true, maxAge: maxAge * 1000 });\n    res.status(200).json({ user });\n  } catch (err) {\n    const errors = handleErrors(err);\n    res.status(400).json({ errors });\n  }\n};\n\nconst logoutGet = async (req, res) => {\n  await res.cookie('jwt', '', { maxAge: 1 });\n  res.status(200).json({ user: null });\n};\n\nconst verifyAuth = async (req, res) => {\n  const token = req.cookies.urlshort;\n\n  if (token) {\n    jwt.verify(token, process.env.JWT_SECRET, (err, decodedToken) => {\n      if (err) {\n        res.json({ user: null });\n      } else {\n        res.status(200).json({ user: decodedToken.id });\n      }\n    });\n  } else {\n    res.json({ user: null });\n  }\n};\n\nmodule.exports = {\n  verifyAuth,\n  signupPost,\n  loginPost,\n  logoutGet\n};\n"]},"metadata":{},"sourceType":"script"}