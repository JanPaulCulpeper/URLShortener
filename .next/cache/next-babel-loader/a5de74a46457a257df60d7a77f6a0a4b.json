{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const authError = useSelector(authSelectors.selectError);\n  const {\n    email,\n    password\n  } = values;\n  const onLogin = React.useCallback(() => {\n    dispatch(authActions.login({\n      email,\n      password\n    }));\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      console.log('hello');\n      Object.keys(authError).map(key => authError[key] && toast(authError[key]));\n    }\n  }, [authToken]);\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Login\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }],\n    LowerText: {\n      info: \"Don't have an account?\",\n      link: {\n        name: 'Signup',\n        ref: '/signup'\n      }\n    }\n  }));\n};\n\nexport default Login;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/login.js"
    ],
    "names": [
      "React",
      "useDispatch",
      "useSelector",
      "useRouter",
      "ToastContainer",
      "toast",
      "Navigation",
      "Form",
      "authSelectors",
      "authActions",
      "Login",
      "router",
      "dispatch",
      "values",
      "setValues",
      "useState",
      "authToken",
      "selectAuthToken",
      "authError",
      "selectError",
      "email",
      "password",
      "onLogin",
      "useCallback",
      "login",
      "handleSubmit",
      "e",
      "preventDefault",
      "useEffect",
      "push",
      "console",
      "log",
      "Object",
      "keys",
      "map",
      "key",
      "title",
      "ref",
      "label",
      "id",
      "type",
      "info",
      "link",
      "name"
    ],
    "mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBd,KAAK,CAACe,QAAN,CAAe,EAAf,CAA5B;AACA,QAAMC,SAAS,GAAGd,WAAW,CAACM,aAAa,CAACS,eAAf,CAA7B;AACA,QAAMC,SAAS,GAAGhB,WAAW,CAACM,aAAa,CAACW,WAAf,CAA7B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBR,MAA5B;AAEA,QAAMS,OAAO,GAAGtB,KAAK,CAACuB,WAAN,CAAkB,MAAM;AACtCX,IAAAA,QAAQ,CAACH,WAAW,CAACe,KAAZ,CAAkB;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAlB,CAAD,CAAR;AACD,GAFe,EAEb,CAACR,MAAD,EAASD,QAAT,EAAmBH,WAAnB,CAFa,CAAhB;;AAIA,QAAMgB,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO;AACR,GAHD;;AAKAtB,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB,QAAIZ,SAAJ,EAAeL,MAAM,CAACkB,IAAP,CAAY,GAAZ;;AACf,QAAIX,SAAJ,EAAe;AACbY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYf,SAAZ,EAAuBgB,GAAvB,CACGC,GAAD,IAASjB,SAAS,CAACiB,GAAD,CAAT,IAAkB9B,KAAK,CAACa,SAAS,CAACiB,GAAD,CAAV,CADlC;AAGD;AACF,GARD,EAQG,CAACnB,SAAD,CARH;AAUA,SACE,4BACE,MAAC,cAAD,OADF,EAEE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAE,CACL;AACEoB,MAAAA,KAAK,EAAE,MADT;AAEEC,MAAAA,GAAG,EAAE;AAFP,KADK;AAFT,IAFF,EAYE,MAAC,IAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAE,CAACxB,MAAD,EAASC,SAAT,CAFf;AAGE,IAAA,cAAc,EAAEW,YAHlB;AAIE,IAAA,MAAM,EAAE,CACN;AAAEa,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,EAAE,EAAE,OAAtB;AAA+BC,MAAAA,IAAI,EAAE;AAArC,KADM,EAEN;AAAEF,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,EAAE,EAAE,UAAzB;AAAqCC,MAAAA,IAAI,EAAE;AAA3C,KAFM,CAJV;AAQE,IAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,wBADG;AAETC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,QADF;AAEJN,QAAAA,GAAG,EAAE;AAFD;AAFG;AARb,IAZF,CADF;AA+BD,CA1DD;;AA4DA,eAAe3B,KAAf",
    "sourcesContent": [
      "import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const authError = useSelector(authSelectors.selectError);\n  const { email, password } = values;\n\n  const onLogin = React.useCallback(() => {\n    dispatch(authActions.login({ email, password }));\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n    if (authError) {\n      console.log('hello');\n      Object.keys(authError).map(\n        (key) => authError[key] && toast(authError[key])\n      );\n    }\n  }, [authToken]);\n\n  return (\n    <>\n      <ToastContainer />\n      <Navigation\n        Title=\"Login\"\n        Links={[\n          {\n            title: 'Home',\n            ref: '/'\n          }\n        ]}\n      />\n\n      <Form\n        Title=\"Account\"\n        ParentState={[values, setValues]}\n        SubmitFunction={handleSubmit}\n        Inputs={[\n          { label: 'Email', id: 'email', type: 'email' },\n          { label: 'Password', id: 'password', type: 'password' }\n        ]}\n        LowerText={{\n          info: \"Don't have an account?\",\n          link: {\n            name: 'Signup',\n            ref: '/signup'\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default Login;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
