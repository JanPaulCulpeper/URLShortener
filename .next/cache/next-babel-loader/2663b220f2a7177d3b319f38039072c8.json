{
  "ast": null,
  "code": "import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport useStyles from './style';\n\nvar Form = function Form(_ref) {\n  _s();\n\n  var Inputs = _ref.Inputs,\n      Title = _ref.Title,\n      SubmitLabel = _ref.SubmitLabel,\n      ParentState = _ref.ParentState,\n      SubmitFunction = _ref.SubmitFunction,\n      LowerText = _ref.LowerText;\n  var classes = useStyles();\n\n  var handleChange = function handleChange(e) {\n    ParentState[1](_objectSpread(_objectSpread({}, ParentState[0]), {}, _defineProperty({}, e.target.id, e.target.value)));\n  };\n\n  return __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, null, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true\n  }, Title)), __jsx(CardContent, null, __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: SubmitFunction\n  }, Inputs.map(function (input) {\n    return __jsx(TextField, {\n      type: input.type,\n      onChange: handleChange,\n      className: classes.input,\n      id: input.id,\n      label: input.label,\n      variant: \"outlined\"\n    });\n  }), __jsx(\"div\", {\n    className: classes.buttons\n  }, __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\"\n  }, SubmitLabel))), __jsx(Typography, null, \"\".concat(LowerText.info, \" \").concat(LowerText.ref))));\n};\n\n_s(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nForm.propTypes = {\n  Inputs: PropTypes.arrayOf(Object),\n  Title: PropTypes.string,\n  SubmitLabel: PropTypes.string,\n  ParentState: PropTypes.instanceOf(Object),\n  SubmitFunction: PropTypes.func,\n  LowerText: PropTypes.string\n};\nForm.defaultProps = {\n  Inputs: [],\n  Title: 'Example',\n  SubmitLabel: 'submit',\n  ParentState: {},\n  SubmitFunction: function SubmitFunction() {},\n  LowerText: ''\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/components/Form/index.js"
    ],
    "names": [
      "React",
      "PropTypes",
      "TextField",
      "Card",
      "CardContent",
      "Typography",
      "Button",
      "useStyles",
      "Form",
      "Inputs",
      "Title",
      "SubmitLabel",
      "ParentState",
      "SubmitFunction",
      "LowerText",
      "classes",
      "handleChange",
      "e",
      "target",
      "id",
      "value",
      "card",
      "title",
      "form",
      "map",
      "input",
      "type",
      "label",
      "buttons",
      "info",
      "ref",
      "propTypes",
      "arrayOf",
      "Object",
      "string",
      "instanceOf",
      "func",
      "defaultProps"
    ],
    "mappings": ";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAOP;AAAA;;AAAA,MANJC,MAMI,QANJA,MAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,cAEI,QAFJA,cAEI;AAAA,MADJC,SACI,QADJA,SACI;AACJ,MAAMC,OAAO,GAAGR,SAAS,EAAzB;;AAEA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BL,IAAAA,WAAW,CAAC,CAAD,CAAX,iCACKA,WAAW,CAAC,CAAD,CADhB,2BAEGK,CAAC,CAACC,MAAF,CAASC,EAFZ,EAEiBF,CAAC,CAACC,MAAF,CAASE,KAF1B;AAID,GALD;;AAOA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACM;AAAzB,KACE,MAAC,WAAD,QACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEN,OAAO,CAACO,KAA/B;AAAsC,IAAA,OAAO,EAAC,IAA9C;AAAmD,IAAA,YAAY;AAA/D,KACGZ,KADH,CADF,CADF,EAME,MAAC,WAAD,QACE;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACQ,IAAzB;AAA+B,IAAA,QAAQ,EAAEV;AAAzC,KACGJ,MAAM,CAACe,GAAP,CAAW,UAACC,KAAD;AAAA,WACV,MAAC,SAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACC,IADd;AAEE,MAAA,QAAQ,EAAEV,YAFZ;AAGE,MAAA,SAAS,EAAED,OAAO,CAACU,KAHrB;AAIE,MAAA,EAAE,EAAEA,KAAK,CAACN,EAJZ;AAKE,MAAA,KAAK,EAAEM,KAAK,CAACE,KALf;AAME,MAAA,OAAO,EAAC;AANV,MADU;AAAA,GAAX,CADH,EAWE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACa;AAAxB,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAsC,IAAA,OAAO,EAAC;AAA9C,KACGjB,WADH,CADF,CAXF,CADF,EAkBE,MAAC,UAAD,kBAAgBG,SAAS,CAACe,IAA1B,cAAkCf,SAAS,CAACgB,GAA5C,EAlBF,CANF,CADF;AA6BD,CA9CD;;GAAMtB,I;UAQYD,S;;;KARZC,I;AAgDNA,IAAI,CAACuB,SAAL,GAAiB;AACftB,EAAAA,MAAM,EAAER,SAAS,CAAC+B,OAAV,CAAkBC,MAAlB,CADO;AAEfvB,EAAAA,KAAK,EAAET,SAAS,CAACiC,MAFF;AAGfvB,EAAAA,WAAW,EAAEV,SAAS,CAACiC,MAHR;AAIftB,EAAAA,WAAW,EAAEX,SAAS,CAACkC,UAAV,CAAqBF,MAArB,CAJE;AAKfpB,EAAAA,cAAc,EAAEZ,SAAS,CAACmC,IALX;AAMftB,EAAAA,SAAS,EAAEb,SAAS,CAACiC;AANN,CAAjB;AASA1B,IAAI,CAAC6B,YAAL,GAAoB;AAClB5B,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,KAAK,EAAE,SAFW;AAGlBC,EAAAA,WAAW,EAAE,QAHK;AAIlBC,EAAAA,WAAW,EAAE,EAJK;AAKlBC,EAAAA,cAAc,EAAE,0BAAM,CAAE,CALN;AAMlBC,EAAAA,SAAS,EAAE;AANO,CAApB;AASA,eAAeN,IAAf",
    "sourcesContent": [
      "import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport useStyles from './style';\n\nconst Form = ({\n  Inputs,\n  Title,\n  SubmitLabel,\n  ParentState,\n  SubmitFunction,\n  LowerText\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (e) => {\n    ParentState[1]({\n      ...ParentState[0],\n      [e.target.id]: e.target.value\n    });\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} variant=\"h4\" gutterBottom>\n          {Title}\n        </Typography>\n      </CardContent>\n      <CardContent>\n        <form className={classes.form} onSubmit={SubmitFunction}>\n          {Inputs.map((input) => (\n            <TextField\n              type={input.type}\n              onChange={handleChange}\n              className={classes.input}\n              id={input.id}\n              label={input.label}\n              variant=\"outlined\"\n            />\n          ))}\n          <div className={classes.buttons}>\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n              {SubmitLabel}\n            </Button>\n          </div>\n        </form>\n        <Typography>{`${LowerText.info} ${LowerText.ref}`}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nForm.propTypes = {\n  Inputs: PropTypes.arrayOf(Object),\n  Title: PropTypes.string,\n  SubmitLabel: PropTypes.string,\n  ParentState: PropTypes.instanceOf(Object),\n  SubmitFunction: PropTypes.func,\n  LowerText: PropTypes.string\n};\n\nForm.defaultProps = {\n  Inputs: [],\n  Title: 'Example',\n  SubmitLabel: 'submit',\n  ParentState: {},\n  SubmitFunction: () => {},\n  LowerText: ''\n};\n\nexport default Form;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
