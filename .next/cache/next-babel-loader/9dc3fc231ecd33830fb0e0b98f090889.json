{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const authError = useSelector(authSelectors.selectError);\n  const {\n    email,\n    password\n  } = values;\n  const onLogin = React.useCallback(() => {\n    dispatch(authActions.login({\n      email,\n      password\n    }));\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      Object.keys(authError).map(key => authError[key] && toast(authError[key], {\n        type: 'error'\n      }));\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Login\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }],\n    LowerText: {\n      info: \"Don't have an account?\",\n      link: {\n        name: 'Signup',\n        ref: '/signup'\n      }\n    }\n  }));\n};\n\nexport default Login;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
