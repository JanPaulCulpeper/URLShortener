{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar, MenuItem, Menu } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: purple[500]\n  }\n});\n\nvar UserIcon = function UserIcon(_ref) {\n  _s();\n\n  var Letter = _ref.Letter;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Avatar, {\n    className: classes.avatar\n  }, Letter), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"My account\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Logout\")));\n};\n\n_s(UserIcon, \"rR4YbuwDsNH7kIPxRuzEnRkbEdw=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserIcon;\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\nexport default UserIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserIcon\");","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/components/UserIcon/index.js"],"names":["React","Avatar","MenuItem","Menu","makeStyles","purple","PropTypes","useStyles","avatar","backgroundColor","UserIcon","Letter","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","classes","Boolean","propTypes","string","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,QAAuC,mBAAvC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAEJ,MAAM,CAAC,GAAD;AADjB;AADmB,CAAD,CAA5B;;AAMA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,wBACCX,KAAK,CAACY,QAAN,CAAe,IAAf,CADD;AAAA;AAAA,MACxBC,QADwB;AAAA,MACdC,WADc;;AAG/B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BF,IAAAA,WAAW,CAACE,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,MAAMK,OAAO,GAAGZ,SAAS,EAAzB;AACA,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEY,OAAO,CAACX;AAA3B,KAAoCG,MAApC,CADF,EAEE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEE,QAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAEO,OAAO,CAACP,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEK;AALX,KAOE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,eAPF,EAQE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,kBARF,EASE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,cATF,CAFF,CADF;AAgBD,CA3BD;;GAAMR,Q;UAUYH,S;;;KAVZG,Q;AA6BNA,QAAQ,CAACW,SAAT,GAAqB;AACnBV,EAAAA,MAAM,EAAEL,SAAS,CAACgB;AADC,CAArB;AAIAZ,QAAQ,CAACa,YAAT,GAAwB;AACtBZ,EAAAA,MAAM,EAAE;AADc,CAAxB;AAIA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nimport { Avatar, MenuItem, Menu } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: purple[500]\n  }\n});\n\nconst UserIcon = ({ Letter }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const classes = useStyles();\n  return (\n    <>\n      <Avatar className={classes.avatar}>{Letter}</Avatar>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem onClick={handleClose}>My account</MenuItem>\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\n\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\n\nexport default UserIcon;\n"]},"metadata":{},"sourceType":"module"}