{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const {\n    cpassword,\n    password,\n    userName,\n    email\n  } = values;\n  const authError = useSelector(authSelectors.selectError);\n  const onSignup = React.useCallback(() => {\n    if (cpassword !== password) {\n      toast(\"Passwords don't match!\", {\n        type: 'error'\n      });\n    } else {\n      dispatch(authActions.signup({\n        email,\n        password,\n        userName\n      }));\n    }\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSignup();\n  };\n\n  const onClear = () => {\n    dispatch(authActions.clearError());\n  };\n\n  React.useEffect(() => {\n    if (authToken && !loading) router.push('/');\n\n    if (authError) {\n      Object.keys(authError).map(key => authError[key] && toast(authError[key], {\n        type: 'error'\n      }));\n      onClear();\n    }\n  }, [authToken, authError]);\n  React.useEffect(() => {\n    onClear();\n    return () => onClear();\n  }, []);\n  return __jsx(React.Fragment, null, loading ? __jsx(LinearProgress, null) : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Signup\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Create Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'User name',\n      id: 'userName',\n      type: 'text'\n    }, {\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }, {\n      label: 'Confirm Password',\n      id: 'cpassword',\n      type: 'password'\n    }],\n    LowerText: {\n      info: 'Already have an account?',\n      link: {\n        name: 'Login',\n        ref: '/login'\n      }\n    }\n  })));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/pages/signup.js"],"names":["React","useDispatch","useSelector","useRouter","ToastContainer","toast","LinearProgress","Navigation","Form","authSelectors","authActions","Signup","router","dispatch","values","setValues","useState","authToken","selectAuthToken","loading","selectLoading","cpassword","password","userName","email","authError","selectError","onSignup","useCallback","type","signup","handleSubmit","e","preventDefault","onClear","clearError","useEffect","push","Object","keys","map","key","title","ref","label","id","info","link","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const { cpassword, password, userName, email } = values;\n  const authError = useSelector(authSelectors.selectError);\n  const onSignup = React.useCallback(() => {\n    if (cpassword !== password) {\n      toast(\"Passwords don't match!\", { type: 'error' });\n    } else {\n      dispatch(\n        authActions.signup({\n          email,\n          password,\n          userName\n        })\n      );\n    }\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSignup();\n  };\n\n  const onClear = () => {\n    dispatch(authActions.clearError());\n  };\n  React.useEffect(() => {\n    if (authToken && !loading) router.push('/');\n    if (authError) {\n      Object.keys(authError).map(\n        (key) => authError[key] && toast(authError[key], { type: 'error' })\n      );\n      onClear();\n    }\n  }, [authToken, authError]);\n\n  React.useEffect(() => {\n    onClear();\n    return () => onClear();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <LinearProgress />\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"Signup\"\n            Links={[\n              {\n                title: 'Home',\n                ref: '/'\n              }\n            ]}\n          />\n\n          <Form\n            Title=\"Create Account\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'User name', id: 'userName', type: 'text' },\n              { label: 'Email', id: 'email', type: 'email' },\n              { label: 'Password', id: 'password', type: 'password' },\n              { label: 'Confirm Password', id: 'cpassword', type: 'password' }\n            ]}\n            LowerText={{\n              info: 'Already have an account?',\n              link: {\n                name: 'Login',\n                ref: '/login'\n              }\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}