{
  "ast": null,
  "code": "var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { authActions } from '../store/actions';\nimport store from '../services/redux';\nimport '../app.css';\nimport 'fontsource-roboto';\nimport 'react-toastify/dist/ReactToastify.css';\nvar theme = {};\n\nvar Child = function Child(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var dispatch = useDispatch();\n  var init = React.useCallback(function () {\n    dispatch(authActions.verifyAuth());\n  }, [dispatch]);\n  React.useEffect(function () {\n    init();\n    var jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Component, pageProps));\n};\n\n_s(Child, \"wpWIQL4ZOK75aw/ztR8Awo/0jJA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Child;\n\nvar App = function App(props) {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(\"div\", null, __jsx(Child, props)))));\n};\n\n_c2 = App;\nChild.defaultProps = {\n  pageProps: {}\n};\nChild.propTypes = {\n  Component: PropTypes.instanceOf(Object).isRequired,\n  pageProps: PropTypes.instanceOf(Object)\n};\n\nvar makestore = function makestore() {\n  return store;\n};\n\nvar wrapper = createWrapper(makestore);\nexport default _c3 = wrapper.withRedux(App);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"App\");\n$RefreshReg$(_c3, \"%default%\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/_app.js"
    ],
    "names": [
      "React",
      "PropTypes",
      "ThemeProvider",
      "Provider",
      "useDispatch",
      "createWrapper",
      "authActions",
      "store",
      "theme",
      "Child",
      "Component",
      "pageProps",
      "dispatch",
      "init",
      "useCallback",
      "verifyAuth",
      "useEffect",
      "jssStyles",
      "document",
      "querySelector",
      "parentNode",
      "removeChild",
      "App",
      "props",
      "defaultProps",
      "propTypes",
      "instanceOf",
      "Object",
      "isRequired",
      "makestore",
      "wrapper",
      "withRedux"
    ],
    "mappings": ";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,YAAP;AACA,OAAO,mBAAP;AACA,OAAO,uCAAP;AAEA,IAAMC,KAAK,GAAG,EAAd;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA8B;AAAA;;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC1C,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,MAAMS,IAAI,GAAGb,KAAK,CAACc,WAAN,CAAkB,YAAM;AACnCF,IAAAA,QAAQ,CAACN,WAAW,CAACS,UAAZ,EAAD,CAAR;AACD,GAFY,EAEV,CAACH,QAAD,CAFU,CAAb;AAIAZ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpBH,IAAAA,IAAI;AACJ,QAAMI,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;AACA,QAAIF,SAAS,IAAIA,SAAS,CAACG,UAA3B,EACEH,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACH,GALD,EAKG,EALH;AAOA,SACE,4BACE,MAAC,SAAD,EAAeN,SAAf,CADF,CADF;AAKD,CAnBD;;GAAMF,K;UACaL,W;;;KADbK,K;;AAqBN,IAAMa,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrB,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB;AAAjB,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,KACE,mBACE,MAAC,KAAD,EAAWe,KAAX,CADF,CADF,CADF,CADF,CADF;AAWD,CAZD;;MAAMD,G;AAcNb,KAAK,CAACe,YAAN,GAAqB;AACnBb,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIAF,KAAK,CAACgB,SAAN,GAAkB;AAChBf,EAAAA,SAAS,EAAET,SAAS,CAACyB,UAAV,CAAqBC,MAArB,EAA6BC,UADxB;AAEhBjB,EAAAA,SAAS,EAAEV,SAAS,CAACyB,UAAV,CAAqBC,MAArB;AAFK,CAAlB;;AAKA,IAAME,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMtB,KAAN;AAAA,CAAlB;;AACA,IAAMuB,OAAO,GAAGzB,aAAa,CAACwB,SAAD,CAA7B;AAEA,qBAAeC,OAAO,CAACC,SAAR,CAAkBT,GAAlB,CAAf",
    "sourcesContent": [
      "import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { authActions } from '../store/actions';\nimport store from '../services/redux';\nimport '../app.css';\nimport 'fontsource-roboto';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst theme = {};\n\nconst Child = ({ Component, pageProps }) => {\n  const dispatch = useDispatch();\n\n  const init = React.useCallback(() => {\n    dispatch(authActions.verifyAuth());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    init();\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode)\n      jssStyles.parentNode.removeChild(jssStyles);\n  }, []);\n\n  return (\n    <>\n      <Component {...pageProps} />\n    </>\n  );\n};\n\nconst App = (props) => {\n  return (\n    <>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <div>\n            <Child {...props} />\n          </div>\n        </ThemeProvider>\n      </Provider>\n    </>\n  );\n};\n\nChild.defaultProps = {\n  pageProps: {}\n};\n\nChild.propTypes = {\n  Component: PropTypes.instanceOf(Object).isRequired,\n  pageProps: PropTypes.instanceOf(Object)\n};\n\nconst makestore = () => store;\nconst wrapper = createWrapper(makestore);\n\nexport default wrapper.withRedux(App);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
