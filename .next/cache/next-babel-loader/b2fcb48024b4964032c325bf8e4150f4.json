{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar, MenuItem, Menu, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    paper: {\n      marginRight: theme.spacing(2)\n    },\n    avatar: {\n      backgroundColor: purple[500]\n    }\n  };\n});\n\nvar UserIcon = function UserIcon(_ref) {\n  _s();\n\n  var Letter = _ref.Letter;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(IconButton, {\n    onClick: handleClick\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, Letter)), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"My account\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Logout\")));\n};\n\n_s(UserIcon, \"ofUJ/6lNXZzC79SHYgq4elyC9Ww=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserIcon;\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\nexport default UserIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserIcon\");","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/components/UserIcon/index.js"],"names":["React","Avatar","MenuItem","Menu","IconButton","makeStyles","purple","PropTypes","useStyles","theme","root","display","paper","marginRight","spacing","avatar","backgroundColor","UserIcon","Letter","classes","useState","open","setOpen","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleClick","anchorEl","Boolean","propTypes","string","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAACI,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,WAAW,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADR,KAJgC;AAOvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,eAAe,EAAEV,MAAM,CAAC,GAAD;AADjB;AAP+B,GAAZ;AAAA,CAAD,CAA5B;;AAYA,IAAMW,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA;;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC/B,MAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAD+B,wBAEPR,KAAK,CAACoB,QAAN,CAAe,KAAf,CAFO;AAAA;AAAA,MAExBC,IAFwB;AAAA,MAElBC,OAFkB;;AAG/B,MAAMC,SAAS,GAAGvB,KAAK,CAACwB,MAAN,CAAa,IAAb,CAAlB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBH,IAAAA,OAAO,CAAC,UAACI,QAAD;AAAA,aAAc,CAACA,QAAf;AAAA,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,QAAIL,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,QAAlB,CAA2BF,KAAK,CAACG,MAAjC,CAAzB,EAAmE;AACjE;AACD;;AAEDT,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAND;;AAOA,SACE,4BACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAEU;AAArB,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEb,OAAO,CAACJ;AAA3B,KAAoCG,MAApC,CADF,CADF,EAIE,MAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEe,QAFZ;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,IAAI,EAAEC,OAAO,CAACD,QAAD,CAJf;AAKE,IAAA,OAAO,EAAEN;AALX,KAOE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,eAPF,EAQE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,kBARF,EASE,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEA;AAAnB,cATF,CAJF,CADF;AAkBD,CAlCD;;GAAMV,Q;UACYT,S;;;KADZS,Q;AAoCNA,QAAQ,CAACkB,SAAT,GAAqB;AACnBjB,EAAAA,MAAM,EAAEX,SAAS,CAAC6B;AADC,CAArB;AAIAnB,QAAQ,CAACoB,YAAT,GAAwB;AACtBnB,EAAAA,MAAM,EAAE;AADc,CAAxB;AAIA,eAAeD,QAAf","sourcesContent":["import React from 'react';\n\nimport { Avatar, MenuItem, Menu, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({ Letter }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <Avatar className={classes.avatar}>{Letter}</Avatar>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem onClick={handleClose}>My account</MenuItem>\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\n\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\n\nexport default UserIcon;\n"]},"metadata":{},"sourceType":"module"}