{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    color: 'orange'\n  }\n});\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n  return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, {\n    className: classes.root\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \"))), __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"History\"), Object.keys(urls || {}).map(key => __jsx(Container, {\n    className: classes.container\n  }, __jsx(Typography, {\n    key: key\n  }, key), __jsx(Grid, {\n    container: true,\n    direction: \"row\"\n  }, __jsx(SubdirectoryArrowRightIcon, null), __jsx(\"a\", {\n    className: classes.link,\n    href: urls[key]\n  }, urls[key]), __jsx(Button, {\n    color: \"secondary\"\n  }, \"delete\"))))), __jsx(CardContent, null))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/dashboard.js"
    ],
    "names": [
      "React",
      "useSelector",
      "useDispatch",
      "Card",
      "CardContent",
      "Typography",
      "Container",
      "Grid",
      "Button",
      "makeStyles",
      "SubdirectoryArrowRightIcon",
      "Navigation",
      "authSelectors",
      "urlSelectors",
      "authActions",
      "urlActions",
      "UserIcon",
      "useStyles",
      "root",
      "marginTop",
      "container",
      "borderBottom",
      "marginBottom",
      "link",
      "color",
      "Dashboard",
      "classes",
      "dispatch",
      "authToken",
      "selectAuthToken",
      "urls",
      "selectUrls",
      "Logout",
      "useCallback",
      "logout",
      "Fetch",
      "fetchUrls",
      "useEffect",
      "title",
      "ref",
      "condition",
      "replacement",
      "name",
      "act",
      "userName",
      "email",
      "Object",
      "keys",
      "map",
      "key"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Container,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: { color: 'orange' }\n});\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n\n  return (\n    <>\n      {authToken ? (\n        <>\n          <Navigation\n            Title=\"Dashboard\"\n            Links={[\n              {\n                title: 'Shortening',\n                ref: '/'\n              },\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[{ name: 'Logout', act: Logout }]}\n                    Letter={authToken ? authToken.userName[0] : null}\n                  />\n                )\n              }\n            ]}\n          />\n          <Container className={classes.root}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">Account Info</Typography>\n              </CardContent>\n              <CardContent>\n                <Typography>username: {authToken.userName}</Typography>\n                <Typography>email: {authToken.email} </Typography>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">History</Typography>\n                {Object.keys(urls || {}).map((key) => (\n                  <Container className={classes.container}>\n                    <Typography key={key}>{key}</Typography>\n                    <Grid container direction=\"row\">\n                      <SubdirectoryArrowRightIcon />\n                      <a className={classes.link} href={urls[key]}>\n                        {urls[key]}\n                      </a>\n                      <Button color=\"secondary\">delete</Button>\n                    </Grid>\n                  </Container>\n                ))}\n              </CardContent>\n              <CardContent />\n            </Card>\n          </Container>{' '}\n        </>\n      ) : (\n        'Loading...'\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
