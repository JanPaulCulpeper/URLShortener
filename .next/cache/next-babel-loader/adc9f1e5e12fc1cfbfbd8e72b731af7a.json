{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nconst Home = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const currentUrl = useSelector(urlSelectors.selectCurrentUrl);\n  const [values, setValues] = React.useState({\n    url: '',\n    custom: ''\n  });\n  const {\n    url,\n    custom\n  } = values;\n  const [current, setCurrent] = React.useState(null);\n  const urlError = useSelector(urlSelectors.selectError);\n  const handleSubmit = React.useCallback(e => {\n    e.preventDefault();\n    setCurrent(custom);\n\n    if (authToken) {\n      if (url !== '' && custom !== '') {\n        dispatch(urlActions.shorten({\n          custom,\n          url\n        }));\n      } else toast('Cannot have empty fields!', {\n        type: 'error'\n      });\n    } else {\n      router.push('/login');\n    }\n  }, [values, current]);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  React.useEffect(() => {\n    if (urlError) toast(urlError, {\n      type: 'error'\n    });\n  }, [urlError]);\n\n  const clearNotifications = () => {\n    dispatch(urlActions.clear());\n  };\n\n  React.useEffect(() => {\n    if (currentUrl) {\n      toast('Successfuly shortened!', {\n        type: 'success'\n      });\n    }\n  }, [currentUrl]);\n  React.useEffect(() => {\n    return () => clearNotifications();\n  }, []);\n  return __jsx(React.Fragment, null, !authToken && loading ? __jsx(LinearProgress, null) : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"URL-shortener\",\n    Links: [{\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Dashboard',\n          act: () => router.push('/dashboard')\n        }, {\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken === null || authToken === void 0 ? void 0 : authToken.userName[0]\n      })\n    }]\n  }), __jsx(Form, {\n    Title: \"Shorten your URL\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'URL',\n      id: 'url',\n      type: 'text'\n    }, {\n      id: 'custom',\n      type: 'text',\n      exteriorLabel: `your-custom-path`\n    }],\n    LowerText: {\n      info: currentUrl ? null : `${URL}${values.custom || 'your custom path'}`,\n      link: authToken ? {\n        name: currentUrl ? `${URL}${current}` : null,\n        ref: currentUrl ? `${URL}${current}` : null\n      } : {}\n    }\n  }), ' '));\n};\n\nexport default Home;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/index.js"
    ],
    "names": [
      "React",
      "useSelector",
      "useDispatch",
      "ToastContainer",
      "toast",
      "useRouter",
      "LinearProgress",
      "Navigation",
      "authSelectors",
      "urlSelectors",
      "authActions",
      "urlActions",
      "UserIcon",
      "Form",
      "URL",
      "Home",
      "router",
      "dispatch",
      "authToken",
      "selectAuthToken",
      "currentUrl",
      "selectCurrentUrl",
      "values",
      "setValues",
      "useState",
      "url",
      "custom",
      "current",
      "setCurrent",
      "urlError",
      "selectError",
      "handleSubmit",
      "useCallback",
      "e",
      "preventDefault",
      "shorten",
      "type",
      "push",
      "Logout",
      "logout",
      "useEffect",
      "clearNotifications",
      "clear",
      "loading",
      "title",
      "ref",
      "condition",
      "replacement",
      "name",
      "act",
      "userName",
      "label",
      "id",
      "exteriorLabel",
      "info",
      "link"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nconst Home = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const currentUrl = useSelector(urlSelectors.selectCurrentUrl);\n\n  const [values, setValues] = React.useState({\n    url: '',\n    custom: ''\n  });\n  const { url, custom } = values;\n  const [current, setCurrent] = React.useState(null);\n\n  const urlError = useSelector(urlSelectors.selectError);\n\n  const handleSubmit = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      setCurrent(custom);\n      if (authToken) {\n        if (url !== '' && custom !== '') {\n          dispatch(\n            urlActions.shorten({\n              custom,\n              url\n            })\n          );\n        } else toast('Cannot have empty fields!', { type: 'error' });\n      } else {\n        router.push('/login');\n      }\n    },\n    [values, current]\n  );\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  React.useEffect(() => {\n    if (urlError) toast(urlError, { type: 'error' });\n  }, [urlError]);\n\n  const clearNotifications = () => {\n    dispatch(urlActions.clear());\n  };\n\n  React.useEffect(() => {\n    if (currentUrl) {\n      toast('Successfuly shortened!', { type: 'success' });\n    }\n  }, [currentUrl]);\n\n  React.useEffect(() => {\n    return () => clearNotifications();\n  }, []);\n\n  return (\n    <>\n      {!authToken && loading ? (\n        <LinearProgress />\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"URL-shortener\"\n            Links={[\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[\n                      {\n                        name: 'Dashboard',\n                        act: () => router.push('/dashboard')\n                      },\n                      { name: 'Logout', act: Logout }\n                    ]}\n                    Letter={authToken?.userName[0]}\n                  />\n                )\n              }\n            ]}\n          />\n          <Form\n            Title=\"Shorten your URL\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'URL', id: 'url', type: 'text' },\n              {\n                id: 'custom',\n                type: 'text',\n\n                exteriorLabel: `your-custom-path`\n              }\n            ]}\n            LowerText={{\n              info: currentUrl\n                ? null\n                : `${URL}${values.custom || 'your custom path'}`,\n              link: authToken\n                ? {\n                    name: currentUrl ? `${URL}${current}` : null,\n                    ref: currentUrl ? `${URL}${current}` : null\n                  }\n                : {}\n            }}\n          />{' '}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
