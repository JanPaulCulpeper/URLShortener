{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { Avatar, MenuItem, Popper, IconButton, Paper, MenuList, Button, Grow, ClickAwayListener } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({\n  Letter\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(\"div\", null, __jsx(IconButton, {\n    onClick: prevOpen\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, Letter)), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n    }\n  }), __jsx(Paper, null, __jsx(ClickAwayListener, {\n    onClickAway: handleClose\n  }, __jsx(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown\n  }, __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"My account\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Logout\")))))))));\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\nexport default UserIcon;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/components/UserIcon/index.js"],"names":["React","Avatar","MenuItem","Popper","IconButton","Paper","MenuList","Button","Grow","ClickAwayListener","makeStyles","purple","PropTypes","useStyles","theme","root","display","paper","marginRight","spacing","avatar","backgroundColor","UserIcon","Letter","classes","open","setOpen","useState","anchorRef","useRef","handleToggle","prevOpen","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","useEffect","focus","undefined","TransitionProps","placement","transformOrigin","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  Avatar,\n  MenuItem,\n  Popper,\n  IconButton,\n  Paper,\n  MenuList,\n  Button,\n  Grow,\n  ClickAwayListener\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({ Letter }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return (\n    <>\n      <div className={classes.root}>\n        <div>\n          <IconButton onClick={prevOpen}>\n            <Avatar className={classes.avatar}>{Letter}</Avatar>\n          </IconButton>\n          <Popper\n            open={open}\n            anchorEl={anchorRef.current}\n            role={undefined}\n            transition\n            disablePortal\n          >\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                style={{\n                  transformOrigin:\n                    placement === 'bottom' ? 'center top' : 'center bottom'\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={handleClose}>\n                    <MenuList\n                      autoFocusItem={open}\n                      id=\"menu-list-grow\"\n                      onKeyDown={handleListKeyDown}\n                    >\n                      <MenuItem onClick={handleClose}>Profile</MenuItem>\n                      <MenuItem onClick={handleClose}>My account</MenuItem>\n                      <MenuItem onClick={handleClose}>Logout</MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n        </div>\n      </div>\n    </>\n  );\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\n\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\n\nexport default UserIcon;\n"]},"metadata":{},"sourceType":"module"}