{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport authTypes from './types';\nvar AUTH_ACTION_FAILED = authTypes.AUTH_ACTION_FAILED,\n    SIGNIN = authTypes.SIGNIN;\nexport var verifyAuth = function verifyAuth() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3000/api/auth/verify');\n\n            case 3:\n              res = _context.sent;\n              _context.t0 = dispatch;\n              _context.t1 = AUTH_SUCCESS;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              _context.t2 = _context.sent.user;\n              _context.t3 = {\n                type: _context.t1,\n                payload: _context.t2\n              };\n              (0, _context.t0)(_context.t3);\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t4 = _context[\"catch\"](0);\n              dispatch({\n                type: AUTH_ERROR,\n                payload: _context.t4\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var login = function login(credentials) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(credentials);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch('http://localhost:3000/api/auth/login', {\n                method: 'POST',\n                body: JSON.stringify(credentials),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context2.sent;\n              console.log(data);\n\n              if (data.errors) {\n                dispatch({\n                  type: AUTH_ERROR,\n                  payload: data.errors\n                });\n              }\n\n              if (data.user) {\n                dispatch({\n                  type: AUTH_SUCCESS,\n                  payload: data.user\n                });\n              }\n\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: AUTH_ERROR,\n                payload: _context2.t0\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // export const logouot = () => (dispatch, getState) => {};\n\nexport var signup = function signup(_ref3) {\n  var email = _ref3.email,\n      password = _ref3.password;\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch('http://localhost:3000/api/auth/signup', {\n                method: 'POST',\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.json();\n\n            case 6:\n              data = _context3.sent;\n              console.log(data);\n\n              if (data.errors) {\n                dispatch({\n                  type: AUTH_ERROR,\n                  payload: data.errors\n                });\n              }\n\n              if (data.user) {\n                dispatch({\n                  type: AUTH_SUCCESS,\n                  payload: data.user\n                });\n              }\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: AUTH_ERROR,\n                payload: _context3.t0\n              });\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 12]]);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/store/actions/auth.js"],"names":["authTypes","AUTH_ACTION_FAILED","SIGNIN","verifyAuth","dispatch","fetch","res","AUTH_SUCCESS","json","user","type","payload","AUTH_ERROR","login","credentials","console","log","method","body","JSON","stringify","headers","data","errors","signup","email","password"],"mappings":"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","sourcesContent":["import authTypes from './types';\n\nconst { AUTH_ACTION_FAILED, SIGNIN } = authTypes;\n\nexport const verifyAuth = () => async (dispatch) => {\n  try {\n    const res = await fetch('http://localhost:3000/api/auth/verify');\n    dispatch({ type: AUTH_SUCCESS, payload: (await res.json()).user });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n      payload: err\n    });\n  }\n};\n\nexport const login = (credentials) => async (dispatch) => {\n  console.log(credentials);\n  try {\n    const res = await fetch('http://localhost:3000/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    console.log(data);\n\n    if (data.errors) {\n      dispatch({ type: AUTH_ERROR, payload: data.errors });\n    }\n    if (data.user) {\n      dispatch({ type: AUTH_SUCCESS, payload: data.user });\n    }\n  } catch (err) {\n    dispatch({ type: AUTH_ERROR, payload: err });\n  }\n};\n// export const logouot = () => (dispatch, getState) => {};\nexport const signup = ({ email, password }) => async (dispatch) => {\n  try {\n    const res = await fetch('http://localhost:3000/api/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    console.log(data);\n\n    if (data.errors) {\n      dispatch({ type: AUTH_ERROR, payload: data.errors });\n    }\n    if (data.user) {\n      dispatch({ type: AUTH_SUCCESS, payload: data.user });\n    }\n  } catch (err) {\n    dispatch({ type: AUTH_ERROR, payload: err });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}