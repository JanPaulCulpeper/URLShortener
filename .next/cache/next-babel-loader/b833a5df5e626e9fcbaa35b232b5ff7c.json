{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { Avatar, MenuItem, Menu, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({\n  Letter\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return __jsx(React.Fragment, null, __jsx(IconButton, {\n    onClick: handleClick\n  }, __jsx(Avatar, {\n    className: classes.avatar\n  }, Letter)), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Profile\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"My account\"), __jsx(MenuItem, {\n    onClick: handleClose\n  }, \"Logout\")));\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\nexport default UserIcon;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/components/UserIcon/index.js"
    ],
    "names": [
      "React",
      "Avatar",
      "MenuItem",
      "Menu",
      "IconButton",
      "makeStyles",
      "purple",
      "PropTypes",
      "useStyles",
      "theme",
      "root",
      "display",
      "paper",
      "marginRight",
      "spacing",
      "avatar",
      "backgroundColor",
      "UserIcon",
      "Letter",
      "classes",
      "open",
      "setOpen",
      "useState",
      "anchorRef",
      "useRef",
      "handleToggle",
      "prevOpen",
      "handleClose",
      "event",
      "current",
      "contains",
      "target",
      "handleListKeyDown",
      "key",
      "preventDefault",
      "useEffect",
      "focus",
      "handleClick",
      "anchorEl",
      "Boolean",
      "propTypes",
      "string",
      "defaultProps"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\n\nimport { Avatar, MenuItem, Menu, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: purple[500]\n  }\n}));\n\nconst UserIcon = ({ Letter }) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  return (\n    <>\n      <IconButton onClick={handleClick}>\n        <Avatar className={classes.avatar}>{Letter}</Avatar>\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\n        <MenuItem onClick={handleClose}>My account</MenuItem>\n        <MenuItem onClick={handleClose}>Logout</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nUserIcon.propTypes = {\n  Letter: PropTypes.string\n};\n\nUserIcon.defaultProps = {\n  Letter: 'E'\n};\n\nexport default UserIcon;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
