{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n    container: {\n      border: '1px solid gray'\n    }\n  }\n});\n\nconst Dashboard = () => {\n  var _keys;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n  console.log(keys);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  const Fetch = React.useCallback(() => dispatch(urlActions.fetchUrls()), [dispatch]);\n  React.useEffect(() => Fetch(), []);\n  return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, {\n    className: classes.root\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \"))), __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"History\"), (_keys = keys) === null || _keys === void 0 ? void 0 : _keys.map(key => __jsx(Container, {\n    className: classes.container\n  }, __jsx(Typography, {\n    key: key\n  }, key)))), __jsx(CardContent, null))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/dashboard.js"
    ],
    "names": [
      "React",
      "useSelector",
      "useDispatch",
      "Card",
      "CardContent",
      "Typography",
      "Container",
      "makeStyles",
      "Navigation",
      "authSelectors",
      "urlSelectors",
      "authActions",
      "urlActions",
      "UserIcon",
      "useStyles",
      "root",
      "marginTop",
      "container",
      "border",
      "Dashboard",
      "classes",
      "dispatch",
      "authToken",
      "selectAuthToken",
      "urls",
      "selectUrls",
      "console",
      "log",
      "keys",
      "Logout",
      "useCallback",
      "logout",
      "Fetch",
      "fetchUrls",
      "useEffect",
      "title",
      "ref",
      "condition",
      "replacement",
      "name",
      "act",
      "userName",
      "email",
      "map",
      "key"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30,\n    container: {\n      border: '1px solid gray'\n    }\n  }\n});\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n\n  console.log(keys);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  const Fetch = React.useCallback(() => dispatch(urlActions.fetchUrls()), [\n    dispatch\n  ]);\n  React.useEffect(() => Fetch(), []);\n\n  return (\n    <>\n      {authToken ? (\n        <>\n          <Navigation\n            Title=\"Dashboard\"\n            Links={[\n              {\n                title: 'Shortening',\n                ref: '/'\n              },\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[{ name: 'Logout', act: Logout }]}\n                    Letter={authToken ? authToken.userName[0] : null}\n                  />\n                )\n              }\n            ]}\n          />\n          <Container className={classes.root}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">Account Info</Typography>\n              </CardContent>\n              <CardContent>\n                <Typography>username: {authToken.userName}</Typography>\n                <Typography>email: {authToken.email} </Typography>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">History</Typography>\n                {keys?.map((key) => (\n                  <Container className={classes.container}>\n                    <Typography key={key}>{key}</Typography>\n                  </Container>\n                ))}\n              </CardContent>\n              <CardContent />\n            </Card>\n          </Container>{' '}\n        </>\n      ) : (\n        'Loading...'\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
