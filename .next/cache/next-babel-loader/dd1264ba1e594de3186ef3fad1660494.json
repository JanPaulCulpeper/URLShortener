{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport Link from 'next/link';\nimport useStyles from './style';\n\nconst Form = ({\n  Inputs,\n  Title,\n  SubmitLabel,\n  ParentState,\n  SubmitFunction,\n  LowerText\n}) => {\n  const classes = useStyles();\n\n  const handleChange = e => {\n    ParentState[1](_objectSpread(_objectSpread({}, ParentState[0]), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  return __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, null, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h4\",\n    gutterBottom: true\n  }, Title)), __jsx(CardContent, null, __jsx(\"form\", {\n    className: classes.form,\n    onSubmit: SubmitFunction\n  }, Inputs.map(input => __jsx(TextField, {\n    type: input.type,\n    onChange: handleChange,\n    className: classes.input,\n    id: input.id,\n    label: input.label,\n    variant: \"outlined\"\n  })), LowerText ? __jsx(React.Fragment, null, __jsx(Typography, null, LowerText.info), __jsx(Link, {\n    href: LowerText.link.ref\n  }, __jsx(Typography, null, LowerText.link.name))) : null, __jsx(\"div\", {\n    className: classes.buttons\n  }, __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\"\n  }, SubmitLabel)))));\n};\n\nForm.propTypes = {\n  Inputs: PropTypes.arrayOf(Object),\n  Title: PropTypes.string,\n  SubmitLabel: PropTypes.string,\n  ParentState: PropTypes.instanceOf(Object),\n  SubmitFunction: PropTypes.func,\n  LowerText: PropTypes.string\n};\nForm.defaultProps = {\n  Inputs: [],\n  Title: 'Example',\n  SubmitLabel: 'submit',\n  ParentState: {},\n  SubmitFunction: () => {},\n  LowerText: null\n};\nexport default Form;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/components/Form/index.js"],"names":["React","PropTypes","TextField","Card","CardContent","Typography","Button","Link","useStyles","Form","Inputs","Title","SubmitLabel","ParentState","SubmitFunction","LowerText","classes","handleChange","e","target","id","value","card","title","form","map","input","type","label","info","link","ref","name","buttons","propTypes","arrayOf","Object","string","instanceOf","func","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport Link from 'next/link';\nimport useStyles from './style';\n\nconst Form = ({\n  Inputs,\n  Title,\n  SubmitLabel,\n  ParentState,\n  SubmitFunction,\n  LowerText\n}) => {\n  const classes = useStyles();\n\n  const handleChange = (e) => {\n    ParentState[1]({\n      ...ParentState[0],\n      [e.target.id]: e.target.value\n    });\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.title} variant=\"h4\" gutterBottom>\n          {Title}\n        </Typography>\n      </CardContent>\n      <CardContent>\n        <form className={classes.form} onSubmit={SubmitFunction}>\n          {Inputs.map((input) => (\n            <TextField\n              type={input.type}\n              onChange={handleChange}\n              className={classes.input}\n              id={input.id}\n              label={input.label}\n              variant=\"outlined\"\n            />\n          ))}\n          {LowerText ? (\n            <>\n              <Typography>{LowerText.info}</Typography>\n              <Link href={LowerText.link.ref}>\n                <Typography>{LowerText.link.name}</Typography>\n              </Link>\n            </>\n          ) : null}\n          <div className={classes.buttons}>\n            <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n              {SubmitLabel}\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n};\n\nForm.propTypes = {\n  Inputs: PropTypes.arrayOf(Object),\n  Title: PropTypes.string,\n  SubmitLabel: PropTypes.string,\n  ParentState: PropTypes.instanceOf(Object),\n  SubmitFunction: PropTypes.func,\n  LowerText: PropTypes.string\n};\n\nForm.defaultProps = {\n  Inputs: [],\n  Title: 'Example',\n  SubmitLabel: 'submit',\n  ParentState: {},\n  SubmitFunction: () => {},\n  LowerText: null\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}