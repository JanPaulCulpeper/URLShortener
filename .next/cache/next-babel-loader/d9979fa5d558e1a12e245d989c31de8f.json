{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const Loading = useSelector(authSelectors.selectLoading);\n  const authError = useSelector(authSelectors.selectError);\n  const {\n    email,\n    password\n  } = values;\n  const onLogin = React.useCallback(() => {\n    dispatch(authActions.login({\n      email,\n      password\n    }));\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      Object.keys(authError).map(key => authError[key] && toast(authError[key], {\n        type: 'error'\n      }));\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n  return __jsx(React.Fragment, null, !authToken && loading ? __jsx(LinearProgress, null) : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Login\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }],\n    LowerText: {\n      info: \"Don't have an account?\",\n      link: {\n        name: 'Signup',\n        ref: '/signup'\n      }\n    }\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/pages/login.js"],"names":["React","useDispatch","useSelector","useRouter","ToastContainer","toast","Navigation","Form","authSelectors","authActions","Login","router","dispatch","values","setValues","useState","authToken","selectAuthToken","Loading","selectLoading","authError","selectError","email","password","onLogin","useCallback","login","handleSubmit","e","preventDefault","useEffect","push","Object","keys","map","key","type","clearError","loading","title","ref","label","id","info","link","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Login = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const Loading = useSelector(authSelectors.selectLoading);\n  const authError = useSelector(authSelectors.selectError);\n  const { email, password } = values;\n\n  const onLogin = React.useCallback(() => {\n    dispatch(authActions.login({ email, password }));\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onLogin();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n    if (authError) {\n      Object.keys(authError).map(\n        (key) => authError[key] && toast(authError[key], { type: 'error' })\n      );\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n\n  return (\n    <>\n      {!authToken && loading ? (\n        <LinearProgress />\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"Login\"\n            Links={[\n              {\n                title: 'Home',\n                ref: '/'\n              }\n            ]}\n          />\n\n          <Form\n            Title=\"Account\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'Email', id: 'email', type: 'email' },\n              { label: 'Password', id: 'password', type: 'password' }\n            ]}\n            LowerText={{\n              info: \"Don't have an account?\",\n              link: {\n                name: 'Signup',\n                ref: '/signup'\n              }\n            }}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}