{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var authToken = useSelector(authSelectors.selectAuthToken);\n  var currentUrl = useSelector(urlSelectors.selectCurrentUrl);\n\n  var _React$useState = React.useState({\n    url: '',\n    custom: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var url = values.url,\n      custom = values.custom;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      current = _React$useState4[0],\n      setCurrent = _React$useState4[1];\n\n  var loading = useSelector(authSelectors.selectLoading);\n  var urlError = useSelector(urlSelectors.selectError);\n  var handleSubmit = React.useCallback(function (e) {\n    e.preventDefault();\n    setCurrent(custom);\n\n    if (authToken) {\n      if (url !== '' && custom !== '') {\n        dispatch(urlActions.shorten({\n          custom: custom,\n          url: url\n        }));\n      } else toast('Cannot have empty fields!', {\n        type: 'error'\n      });\n    } else {\n      router.push('/login');\n    }\n  }, [values, current]);\n  var Logout = React.useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(authActions.logout());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [dispatch, authActions]);\n  React.useEffect(function () {\n    if (urlError) toast(urlError, {\n      type: 'error'\n    });\n  }, [urlError]);\n  return __jsx(React.Fragment, null, !authToken && loading ? 'Loading...' : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"URL-shortener\",\n    Links: [{\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Dashboard',\n          act: function act() {\n            return router.push('/dashboard');\n          }\n        }, {\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken === null || authToken === void 0 ? void 0 : authToken.userName[0]\n      })\n    }]\n  }), __jsx(Form, {\n    Title: \"Shorten your URL\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'URL',\n      id: 'url',\n      type: 'text'\n    }, {\n      id: 'custom',\n      type: 'text',\n      exteriorLabel: \"your-custom-path\"\n    }],\n    LowerText: {\n      info: currentUrl ? null : \"\".concat(URL).concat(values.custom || 'your custom path'),\n      link: authToken ? {\n        name: currentUrl ? \"\".concat(URL).concat(current) : null,\n        ref: currentUrl ? \"\".concat(URL).concat(current) : null\n      } : {}\n    }\n  }), ' '));\n};\n\n_s(Home, \"U8wtjvY9sRn2qqJr9OxKb5aclZw=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/pages/index.js"],"names":["React","useSelector","useDispatch","ToastContainer","toast","useRouter","Navigation","authSelectors","urlSelectors","authActions","urlActions","UserIcon","Form","URL","Home","router","dispatch","authToken","selectAuthToken","currentUrl","selectCurrentUrl","useState","url","custom","values","setValues","current","setCurrent","loading","selectLoading","urlError","selectError","handleSubmit","useCallback","e","preventDefault","shorten","type","push","Logout","logout","useEffect","title","ref","condition","replacement","name","act","userName","label","id","exteriorLabel","info","link"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nconst Home = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const currentUrl = useSelector(urlSelectors.selectCurrentUrl);\n  const [values, setValues] = React.useState({\n    url: '',\n    custom: ''\n  });\n  const { url, custom } = values;\n  const [current, setCurrent] = React.useState(null);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urlError = useSelector(urlSelectors.selectError);\n\n  const handleSubmit = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      setCurrent(custom);\n      if (authToken) {\n        if (url !== '' && custom !== '') {\n          dispatch(\n            urlActions.shorten({\n              custom,\n              url\n            })\n          );\n        } else toast('Cannot have empty fields!', { type: 'error' });\n      } else {\n        router.push('/login');\n      }\n    },\n    [values, current]\n  );\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  React.useEffect(() => {\n    if (urlError) toast(urlError, { type: 'error' });\n  }, [urlError]);\n\n  return (\n    <>\n      {!authToken && loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"URL-shortener\"\n            Links={[\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[\n                      {\n                        name: 'Dashboard',\n                        act: () => router.push('/dashboard')\n                      },\n                      { name: 'Logout', act: Logout }\n                    ]}\n                    Letter={authToken?.userName[0]}\n                  />\n                )\n              }\n            ]}\n          />\n          <Form\n            Title=\"Shorten your URL\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'URL', id: 'url', type: 'text' },\n              {\n                id: 'custom',\n                type: 'text',\n\n                exteriorLabel: `your-custom-path`\n              }\n            ]}\n            LowerText={{\n              info: currentUrl\n                ? null\n                : `${URL}${values.custom || 'your custom path'}`,\n              link: authToken\n                ? {\n                    name: currentUrl ? `${URL}${current}` : null,\n                    ref: currentUrl ? `${URL}${current}` : null\n                  }\n                : {}\n            }}\n          />{' '}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}