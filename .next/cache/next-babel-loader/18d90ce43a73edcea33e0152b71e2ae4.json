{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { urlTypes } from './types';\nimport URL from '../../constants';\nvar SHORTEN_ERROR = urlTypes.SHORTEN_ERROR,\n    SHORTEN_LOADING = urlTypes.SHORTEN_LOADING,\n    SHORTEN_URL_SUCCESS = urlTypes.SHORTEN_URL_SUCCESS,\n    FETCH_URLS_SUCCESS = urlTypes.FETCH_URLS_SUCCESS,\n    DELETE_URL_SUCCESS = urlTypes.DELETE_URL_SUCCESS;\nexport var shorten = function shorten(_ref) {\n  var url = _ref.url,\n      custom = _ref.custom;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(URL, \"api/url/create\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  url: url,\n                  custom: custom\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n              if (res.status === 201) dispatch({\n                type: SHORTEN_URL_SUCCESS,\n                payload: data\n              });else {\n                dispatch({\n                  type: SHORTEN_ERROR,\n                  payload: data\n                });\n              }\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchUrls = function fetchUrls() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(\"\".concat(URL, \"api/url/all\"));\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context2.sent;\n              dispatch({\n                type: FETCH_URLS_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context2.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteUrl = function deleteUrl(key) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return fetch('http://localhost:3000/api/url/delete', {\n                method: 'POST',\n                body: JSON.stringify({\n                  key: key\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context3.sent;\n              _context3.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context3.sent;\n              dispatch({\n                type: DELETE_URL_SUCCESS,\n                payload: data\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context3.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/store/actions/url.js"
    ],
    "names": [
      "urlTypes",
      "URL",
      "SHORTEN_ERROR",
      "SHORTEN_LOADING",
      "SHORTEN_URL_SUCCESS",
      "FETCH_URLS_SUCCESS",
      "DELETE_URL_SUCCESS",
      "shorten",
      "url",
      "custom",
      "dispatch",
      "type",
      "fetch",
      "method",
      "body",
      "JSON",
      "stringify",
      "headers",
      "res",
      "json",
      "data",
      "status",
      "payload",
      "fetchUrls",
      "deleteUrl",
      "key"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { urlTypes } from './types';\nimport URL from '../../constants';\n\nconst {\n  SHORTEN_ERROR,\n  SHORTEN_LOADING,\n  SHORTEN_URL_SUCCESS,\n  FETCH_URLS_SUCCESS,\n  DELETE_URL_SUCCESS\n} = urlTypes;\n\nexport const shorten = ({ url, custom }) => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n  try {\n    const res = await fetch(`${URL}api/url/create`, {\n      method: 'POST',\n      body: JSON.stringify({ url, custom }),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    if (res.status === 201)\n      dispatch({ type: SHORTEN_URL_SUCCESS, payload: data });\n    else {\n      dispatch({ type: SHORTEN_ERROR, payload: data });\n    }\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n\nexport const fetchUrls = () => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n\n  try {\n    const res = await fetch(`${URL}api/url/all`);\n    const data = await res.json();\n\n    dispatch({ type: FETCH_URLS_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n\nexport const deleteUrl = (key) => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n\n  try {\n    const res = await fetch('http://localhost:3000/api/url/delete', {\n      method: 'POST',\n      body: JSON.stringify({ key }),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    dispatch({ type: DELETE_URL_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
