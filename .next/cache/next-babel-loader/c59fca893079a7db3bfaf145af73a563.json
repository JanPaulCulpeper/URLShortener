{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport { useRouter } from 'next/router';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    flexGrow: 1\n  },\n  ref: {\n    '&:hover': {\n      color: orange[500]\n    },\n    color: blue[500]\n  },\n  delete: {\n    marginBottom: 10\n  }\n});\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n  const onDelete = React.useCallback(key => {\n    dispatch(urlActions.deleteUrl(key));\n  }, [dispatch]);\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n  React.useEffect(() => {\n    if (!loading && !authToken) router.push('/login');\n  }, []);\n  return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, {\n    className: classes.root\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \"))), __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"History\"), Object.keys(urls || {}).map(key => __jsx(Container, {\n    className: classes.container\n  }, __jsx(Typography, {\n    key: key\n  }, key), __jsx(Grid, {\n    container: true,\n    direction: \"row\"\n  }, __jsx(SubdirectoryArrowRightIcon, null), __jsx(\"div\", {\n    className: classes.link\n  }, __jsx(\"a\", {\n    className: classes.ref,\n    href: urls[key]\n  }, urls[key])), __jsx(Button, {\n    size: \"small\",\n    className: classes.delete,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => onDelete(key)\n  }, \"delete\"))))), __jsx(CardContent, null))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
