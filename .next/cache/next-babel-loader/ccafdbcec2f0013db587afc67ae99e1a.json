{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport { useRouter } from 'next/router';\nimport URL from '../constants';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    flexGrow: 1\n  },\n  ref: {\n    '&:hover': {\n      color: orange[500]\n    },\n    color: blue[500]\n  },\n  delete: {\n    marginBottom: 10\n  }\n});\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n  const onDelete = React.useCallback(key => {\n    dispatch(urlActions.deleteUrl(key));\n  }, [dispatch]);\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n  React.useEffect(() => {\n    if (!loading && !authToken) router.push('/login');\n  }, [authToken]);\n  return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, {\n    className: classes.root\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \"))), __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"History\"), Object.keys(urls || {}).map(key => __jsx(Container, {\n    key: key,\n    className: classes.container\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\"\n  }, __jsx(\"a\", {\n    href: urls[key],\n    className: classes.ref\n  }, __jsx(Typography, null, `${URL}${key}`)), __jsx(ArrowRightIcon, null), __jsx(\"div\", {\n    className: classes.link\n  }, __jsx(Typography, null, urls[key])), __jsx(Button, {\n    size: \"small\",\n    className: classes.delete,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => onDelete(key)\n  }, \"delete\"))))), __jsx(CardContent, null))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/pages/dashboard.js"],"names":["React","useSelector","useDispatch","Card","CardContent","Typography","Container","Grid","Button","makeStyles","ArrowRightIcon","blue","orange","useRouter","URL","Navigation","authSelectors","urlSelectors","authActions","urlActions","UserIcon","useStyles","root","marginTop","container","borderBottom","marginBottom","link","flexGrow","ref","color","delete","Dashboard","router","classes","dispatch","authToken","selectAuthToken","loading","selectLoading","urls","selectUrls","Logout","useCallback","logout","Fetch","fetchUrls","onDelete","key","deleteUrl","useEffect","push","title","condition","replacement","name","act","userName","email","Object","keys","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Container,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport { useRouter } from 'next/router';\nimport URL from '../constants';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    flexGrow: 1\n  },\n  ref: {\n    '&:hover': { color: orange[500] },\n    color: blue[500]\n  },\n  delete: { marginBottom: 10 }\n});\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urls = useSelector(urlSelectors.selectUrls);\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n\n  const onDelete = React.useCallback(\n    (key) => {\n      dispatch(urlActions.deleteUrl(key));\n    },\n    [dispatch]\n  );\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n\n  React.useEffect(() => {\n    if (!loading && !authToken) router.push('/login');\n  }, [authToken]);\n  return (\n    <>\n      {authToken ? (\n        <>\n          <Navigation\n            Title=\"Dashboard\"\n            Links={[\n              {\n                title: 'Shortening',\n                ref: '/'\n              },\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[{ name: 'Logout', act: Logout }]}\n                    Letter={authToken ? authToken.userName[0] : null}\n                  />\n                )\n              }\n            ]}\n          />\n          <Container className={classes.root}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">Account Info</Typography>\n              </CardContent>\n              <CardContent>\n                <Typography>username: {authToken.userName}</Typography>\n                <Typography>email: {authToken.email} </Typography>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">History</Typography>\n                {Object.keys(urls || {}).map((key) => (\n                  <Container key={key} className={classes.container}>\n                    <Grid container direction=\"row\">\n                      <a href={urls[key]} className={classes.ref}>\n                        <Typography>{`${URL}${key}`}</Typography>\n                      </a>\n\n                      <ArrowRightIcon />\n                      <div className={classes.link}>\n                        <Typography>{urls[key]}</Typography>\n                      </div>\n                      <Button\n                        size=\"small\"\n                        className={classes.delete}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={() => onDelete(key)}\n                      >\n                        delete\n                      </Button>\n                    </Grid>\n                  </Container>\n                ))}\n              </CardContent>\n              <CardContent />\n            </Card>\n          </Container>{' '}\n        </>\n      ) : (\n        'Loading...'\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}