{
  "ast": null,
  "code": "import { urlTypes } from './types';\nimport URL from '../../constants';\nconst {\n  SHORTEN_ERROR,\n  SHORTEN_LOADING,\n  SHORTEN_URL_SUCCESS,\n  FETCH_URLS_SUCCESS,\n  DELETE_URL_SUCCESS\n} = urlTypes;\nexport const shorten = ({\n  url,\n  custom\n}) => async dispatch => {\n  dispatch({\n    type: SHORTEN_LOADING\n  });\n\n  try {\n    const res = await fetch(`${URL}api/url/create`, {\n      method: 'POST',\n      body: JSON.stringify({\n        url,\n        custom\n      })\n    });\n    const data = await res.json();\n    if (res.status === 201) dispatch({\n      type: SHORTEN_URL_SUCCESS,\n      payload: data\n    });else {\n      dispatch({\n        type: SHORTEN_ERROR,\n        payload: data\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: SHORTEN_ERROR,\n      payload: err\n    });\n  }\n};\nexport const fetchUrls = () => async dispatch => {\n  dispatch({\n    type: SHORTEN_LOADING\n  });\n\n  try {\n    const res = await fetch(`${URL}api/url/all`);\n    const data = await res.json();\n    dispatch({\n      type: FETCH_URLS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: SHORTEN_ERROR,\n      payload: err\n    });\n  }\n};\nexport const deleteUrl = key => async dispatch => {\n  dispatch({\n    type: SHORTEN_LOADING\n  });\n\n  try {\n    const res = await fetch(`${URL}api/url/delete`, {\n      method: 'POST',\n      body: JSON.stringify({\n        key\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: DELETE_URL_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: SHORTEN_ERROR,\n      payload: err\n    });\n  }\n};",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/store/actions/url.js"
    ],
    "names": [
      "urlTypes",
      "URL",
      "SHORTEN_ERROR",
      "SHORTEN_LOADING",
      "SHORTEN_URL_SUCCESS",
      "FETCH_URLS_SUCCESS",
      "DELETE_URL_SUCCESS",
      "shorten",
      "url",
      "custom",
      "dispatch",
      "type",
      "res",
      "fetch",
      "method",
      "body",
      "JSON",
      "stringify",
      "data",
      "json",
      "status",
      "payload",
      "err",
      "fetchUrls",
      "deleteUrl",
      "key",
      "headers"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { urlTypes } from './types';\nimport URL from '../../constants';\n\nconst {\n  SHORTEN_ERROR,\n  SHORTEN_LOADING,\n  SHORTEN_URL_SUCCESS,\n  FETCH_URLS_SUCCESS,\n  DELETE_URL_SUCCESS\n} = urlTypes;\n\nexport const shorten = ({ url, custom }) => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n  try {\n    const res = await fetch(`${URL}api/url/create`, {\n      method: 'POST',\n      body: JSON.stringify({ url, custom })\n    });\n    const data = await res.json();\n\n    if (res.status === 201)\n      dispatch({ type: SHORTEN_URL_SUCCESS, payload: data });\n    else {\n      dispatch({ type: SHORTEN_ERROR, payload: data });\n    }\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n\nexport const fetchUrls = () => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n\n  try {\n    const res = await fetch(`${URL}api/url/all`);\n    const data = await res.json();\n\n    dispatch({ type: FETCH_URLS_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n\nexport const deleteUrl = (key) => async (dispatch) => {\n  dispatch({ type: SHORTEN_LOADING });\n\n  try {\n    const res = await fetch(`${URL}api/url/delete`, {\n      method: 'POST',\n      body: JSON.stringify({ key }),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    dispatch({ type: DELETE_URL_SUCCESS, payload: data });\n  } catch (err) {\n    dispatch({ type: SHORTEN_ERROR, payload: err });\n  }\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
