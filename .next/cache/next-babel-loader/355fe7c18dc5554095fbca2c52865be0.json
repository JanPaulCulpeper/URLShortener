{
  "ast": null,
  "code": "var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const {\n    cpassword,\n    password,\n    userName,\n    email\n  } = values;\n  const authError = useSelector(authSelectors.selectError);\n  const onSignup = React.useCallback(() => {\n    if (cpassword !== password) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: \"passwords don't match!\"\n      }));\n    } else {\n      dispatch(authActions.signup({\n        email,\n        password,\n        userName\n      }));\n    }\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSignup();\n  };\n\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      console.log('hello');\n      Object.keys(authError).map(key => authError[key] && toast(authError[key], {\n        type: 'error'\n      }));\n    }\n  }, [authToken, authError]);\n  return __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Signup\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Create Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'User name',\n      id: 'userName',\n      type: 'text'\n    }, {\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }, {\n      label: 'Confirm Password',\n      id: 'cpassword',\n      type: 'password'\n    }],\n    LowerText: {\n      info: 'Already have an account?',\n      link: {\n        name: 'Login',\n        ref: '/login'\n      }\n    }\n  }));\n};\n\nexport default Signup;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/signup.js"
    ],
    "names": [
      "React",
      "useDispatch",
      "useSelector",
      "useRouter",
      "ToastContainer",
      "toast",
      "Navigation",
      "Form",
      "authSelectors",
      "authActions",
      "Signup",
      "router",
      "dispatch",
      "values",
      "setValues",
      "useState",
      "authToken",
      "selectAuthToken",
      "cpassword",
      "password",
      "userName",
      "email",
      "authError",
      "selectError",
      "onSignup",
      "useCallback",
      "error",
      "signup",
      "handleSubmit",
      "e",
      "preventDefault",
      "useEffect",
      "push",
      "console",
      "log",
      "Object",
      "keys",
      "map",
      "key",
      "type",
      "title",
      "ref",
      "label",
      "id",
      "info",
      "link",
      "name"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nconst Signup = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const [values, setValues] = React.useState({});\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const { cpassword, password, userName, email } = values;\n  const authError = useSelector(authSelectors.selectError);\n  const onSignup = React.useCallback(() => {\n    if (cpassword !== password) {\n      setValues({ ...values, error: \"passwords don't match!\" });\n    } else {\n      dispatch(\n        authActions.signup({\n          email,\n          password,\n          userName\n        })\n      );\n    }\n  }, [values, dispatch, authActions]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSignup();\n  };\n  React.useEffect(() => {\n    if (authToken) router.push('/');\n    if (authError) {\n      console.log('hello');\n      Object.keys(authError).map(\n        (key) => authError[key] && toast(authError[key], { type: 'error' })\n      );\n    }\n  }, [authToken, authError]);\n\n  return (\n    <>\n      <Navigation\n        Title=\"Signup\"\n        Links={[\n          {\n            title: 'Home',\n            ref: '/'\n          }\n        ]}\n      />\n\n      <Form\n        Title=\"Create Account\"\n        ParentState={[values, setValues]}\n        SubmitFunction={handleSubmit}\n        Inputs={[\n          { label: 'User name', id: 'userName', type: 'text' },\n          { label: 'Email', id: 'email', type: 'email' },\n          { label: 'Password', id: 'password', type: 'password' },\n          { label: 'Confirm Password', id: 'cpassword', type: 'password' }\n        ]}\n        LowerText={{\n          info: 'Already have an account?',\n          link: {\n            name: 'Login',\n            ref: '/login'\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default Signup;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
