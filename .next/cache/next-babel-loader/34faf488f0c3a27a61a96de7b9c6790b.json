{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { authTypes } from '../actions/types';\nconst {\n  AUTH_ACTION_FAILED,\n  SIGNIN,\n  AUTH_LOADING\n} = authTypes;\nconst initialState = {\n  error: null,\n  authToken: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_ACTION_FAILED:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: action.payload\n        });\n      }\n\n    case SIGNIN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: null,\n          authToken: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/store/reducers/auth.js"],"names":["authTypes","AUTH_ACTION_FAILED","SIGNIN","AUTH_LOADING","initialState","error","authToken","authReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,kBAA1B;AAEA,MAAM;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,MAAtB;AAA8BC,EAAAA;AAA9B,IAA+CH,SAArD;AAEA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,kBAAL;AAAyB;AACvB,+CACKO,KADL;AAEEH,UAAAA,KAAK,EAAEI,MAAM,CAACE;AAFhB;AAID;;AACD,SAAKT,MAAL;AAAa;AACX,+CACKM,KADL;AAEEH,UAAAA,KAAK,EAAE,IAFT;AAGEC,UAAAA,SAAS,EAAEG,MAAM,CAACE;AAHpB;AAKD;;AACD;AACE,aAAOH,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,WAAf","sourcesContent":["import { authTypes } from '../actions/types';\n\nconst { AUTH_ACTION_FAILED, SIGNIN, AUTH_LOADING } = authTypes;\n\nconst initialState = {\n  error: null,\n  authToken: null\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AUTH_ACTION_FAILED: {\n      return {\n        ...state,\n        error: action.payload\n      };\n    }\n    case SIGNIN: {\n      return {\n        ...state,\n        error: null,\n        authToken: action.payload\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}