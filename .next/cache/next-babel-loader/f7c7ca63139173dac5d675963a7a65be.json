{
  "ast": null,
  "code": "import { authTypes } from './types';\nconst {\n  AUTH_ACTION_FAILED,\n  AUTH,\n  AUTH_LOADING\n} = authTypes;\nexport const verifyAuth = () => async dispatch => {\n  dispatch({\n    type: AUTH_LOADING\n  });\n\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/verify');\n    dispatch({\n      type: AUTH,\n      payload: (await res.json()).user\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ACTION_FAILED,\n      payload: err\n    });\n  }\n};\nexport const login = credentials => async dispatch => {\n  dispatch({\n    type: AUTH_LOADING\n  });\n\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({\n        type: AUTH_ACTION_FAILED,\n        payload: data.errors\n      });\n    }\n\n    if (data.user) {\n      dispatch({\n        type: AUTH,\n        payload: data.user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTH_ACTION_FAILED,\n      payload: err\n    });\n  }\n}; // export const logouot = () => (dispatch, getState) => {};\n\nexport const signup = ({\n  email,\n  password,\n  userName\n}) => async dispatch => {\n  dispatch({\n    type: AUTH_LOADING\n  });\n\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n        userName\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({\n        type: AUTH_ACTION_FAILED,\n        payload: data.errors\n      });\n    }\n\n    if (data.user) {\n      dispatch({\n        type: AUTH,\n        payload: data.user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTH_ACTION_FAILED,\n      payload: err\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/logout');\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({\n        type: AUTH_ACTION_FAILED,\n        payload: data.errors\n      });\n    }\n\n    if (data.user) {\n      dispatch({\n        type: AUTH,\n        payload: data.user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: AUTH_ACTION_FAILED,\n      payload: err\n    });\n  }\n};",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/store/actions/auth.js"
    ],
    "names": [
      "authTypes",
      "AUTH_ACTION_FAILED",
      "AUTH",
      "AUTH_LOADING",
      "verifyAuth",
      "dispatch",
      "type",
      "res",
      "fetch",
      "payload",
      "json",
      "user",
      "err",
      "login",
      "credentials",
      "method",
      "body",
      "JSON",
      "stringify",
      "headers",
      "data",
      "errors",
      "signup",
      "email",
      "password",
      "userName",
      "logout"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import { authTypes } from './types';\n\nconst { AUTH_ACTION_FAILED, AUTH, AUTH_LOADING } = authTypes;\n\nexport const verifyAuth = () => async (dispatch) => {\n  dispatch({ type: AUTH_LOADING });\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/verify');\n    dispatch({ type: AUTH, payload: (await res.json()).user });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ACTION_FAILED,\n      payload: err\n    });\n  }\n};\n\nexport const login = (credentials) => async (dispatch) => {\n  dispatch({ type: AUTH_LOADING });\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({ type: AUTH_ACTION_FAILED, payload: data.errors });\n    }\n    if (data.user) {\n      dispatch({ type: AUTH, payload: data.user });\n    }\n  } catch (err) {\n    dispatch({ type: AUTH_ACTION_FAILED, payload: err });\n  }\n};\n// export const logouot = () => (dispatch, getState) => {};\nexport const signup = ({ email, password, userName }) => async (dispatch) => {\n  dispatch({ type: AUTH_LOADING });\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, userName }),\n      headers: { 'Content-Type': 'application/json' }\n    });\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({ type: AUTH_ACTION_FAILED, payload: data.errors });\n    }\n    if (data.user) {\n      dispatch({ type: AUTH, payload: data.user });\n    }\n  } catch (err) {\n    dispatch({ type: AUTH_ACTION_FAILED, payload: err });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  try {\n    const res = await fetch('http://localhost:5000/api/auth/logout');\n\n    const data = await res.json();\n\n    if (data.errors) {\n      dispatch({ type: AUTH_ACTION_FAILED, payload: data.errors });\n    }\n    if (data.user) {\n      dispatch({ type: AUTH, payload: data.user });\n    }\n  } catch (err) {\n    dispatch({ type: AUTH_ACTION_FAILED, payload: err });\n  }\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
