{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container } from '@material-ui/core';\nimport Navigation from '../components/Navigation';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  console.log(authToken);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, null, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \")))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/dashboard.js"
    ],
    "names": [
      "React",
      "useSelector",
      "useDispatch",
      "Card",
      "CardContent",
      "Typography",
      "Container",
      "Navigation",
      "authSelectors",
      "authActions",
      "UserIcon",
      "Dashboard",
      "dispatch",
      "authToken",
      "selectAuthToken",
      "console",
      "log",
      "Logout",
      "useCallback",
      "logout",
      "title",
      "ref",
      "condition",
      "replacement",
      "name",
      "act",
      "userName",
      "email"
    ],
    "mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,SAAxC,QAAyD,mBAAzD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,SAAS,GAAGZ,WAAW,CAACO,aAAa,CAACM,eAAf,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAMI,MAAM,GAAGjB,KAAK,CAACkB,WAAN,CAAkB,YAAY;AAC3CN,IAAAA,QAAQ,CAACH,WAAW,CAACU,MAAZ,EAAD,CAAR;AACD,GAFc,EAEZ,CAACP,QAAD,EAAWH,WAAX,CAFY,CAAf;AAIA,SACE,4BACGI,SAAS,GACR,4BACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,KAAK,EAAE,CACL;AACEO,MAAAA,KAAK,EAAE,YADT;AAEEC,MAAAA,GAAG,EAAE;AAFP,KADK,EAKL;AACED,MAAAA,KAAK,EAAE,OADT;AAEEC,MAAAA,GAAG,EAAE,QAFP;AAGEC,MAAAA,SAAS,EAAE,CAAC,CAACT,SAHf;AAIEU,MAAAA,WAAW,EACT,MAAC,QAAD;AACE,QAAA,OAAO,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,GAAG,EAAER;AAAvB,SAAD,CADX;AAEE,QAAA,MAAM,EAAEJ,SAAS,GAAGA,SAAS,CAACa,QAAV,CAAmB,CAAnB,CAAH,GAA2B;AAF9C;AALJ,KALK;AAFT,IADF,EAqBE,MAAC,SAAD,QACE,MAAC,IAAD,QACE,MAAC,WAAD,QACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,oBADF,CADF,EAIE,MAAC,WAAD,QACE,MAAC,UAAD,sBAAuBb,SAAS,CAACa,QAAjC,CADF,EAEE,MAAC,UAAD,mBAAoBb,SAAS,CAACc,KAA9B,MAFF,CAJF,CADF,CArBF,EA+Be,GA/Bf,CADQ,GAmCR,YApCJ,CADF;AAyCD,CAjDD;;AAmDA,eAAehB,SAAf",
    "sourcesContent": [
      "import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container } from '@material-ui/core';\nimport Navigation from '../components/Navigation';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  console.log(authToken);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  return (\n    <>\n      {authToken ? (\n        <>\n          <Navigation\n            Title=\"Dashboard\"\n            Links={[\n              {\n                title: 'Shortening',\n                ref: '/'\n              },\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[{ name: 'Logout', act: Logout }]}\n                    Letter={authToken ? authToken.userName[0] : null}\n                  />\n                )\n              }\n            ]}\n          />\n          <Container>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\">Account Info</Typography>\n              </CardContent>\n              <CardContent>\n                <Typography>username: {authToken.userName}</Typography>\n                <Typography>email: {authToken.email} </Typography>\n              </CardContent>\n            </Card>\n          </Container>{' '}\n        </>\n      ) : (\n        'Loading...'\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
