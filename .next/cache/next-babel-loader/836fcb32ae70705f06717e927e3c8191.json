{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Navigation from '../components/Navigation';\nimport Form from '../components/Form';\nimport { authSelectors } from '../store/selectors';\nimport { authActions } from '../store/actions';\n\nvar Signup = function Signup() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var authToken = useSelector(authSelectors.selectAuthToken);\n  var cpassword = values.cpassword,\n      password = values.password,\n      userName = values.userName,\n      email = values.email;\n  var authError = useSelector(authSelectors.selectError);\n  var onSignup = React.useCallback(function () {\n    if (cpassword !== password) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        error: \"passwords don't match!\"\n      }));\n    } else {\n      dispatch(authActions.signup({\n        email: email,\n        password: password,\n        userName: userName\n      }));\n    }\n  }, [values, dispatch, authActions]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    onSignup();\n  };\n\n  React.useEffect(function () {\n    if (authToken) router.push('/');\n\n    if (authError) {\n      Object.keys(authError).map(function (key) {\n        return authError[key] && toast(authError[key], {\n          type: 'error'\n        });\n      });\n      dispatch(authActions.clearError());\n    }\n  }, [authToken, authError]);\n  return __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"Signup\",\n    Links: [{\n      title: 'Home',\n      ref: '/'\n    }]\n  }), __jsx(Form, {\n    Title: \"Create Account\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'User name',\n      id: 'userName',\n      type: 'text'\n    }, {\n      label: 'Email',\n      id: 'email',\n      type: 'email'\n    }, {\n      label: 'Password',\n      id: 'password',\n      type: 'password'\n    }, {\n      label: 'Confirm Password',\n      id: 'cpassword',\n      type: 'password'\n    }],\n    LowerText: {\n      info: 'Already have an account?',\n      link: {\n        name: 'Login',\n        ref: '/login'\n      }\n    }\n  }));\n};\n\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}