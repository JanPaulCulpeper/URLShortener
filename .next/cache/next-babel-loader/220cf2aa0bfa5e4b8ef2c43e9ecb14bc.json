{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { authActions } from '../store/actions';\nimport store from '../services/redux';\nimport '../app.css';\nimport 'fontsource-roboto';\nconst theme = {};\n\nconst Child = ({\n  Component,\n  pageProps\n}) => {\n  const dispatch = useDispatch();\n  const init = React.useCallback(() => {\n    dispatch(authActions.verifyAuth());\n  }, [dispatch]);\n  React.useEffect(() => {\n    init();\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode) jssStyles.parentNode.removeChild(jssStyles);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Component, pageProps));\n};\n\nconst App = props => {\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(\"div\", null, __jsx(Child, props)))));\n};\n\nChild.defaultProps = {\n  pageProps: {}\n};\nChild.propTypes = {\n  Component: PropTypes.instanceOf(Object).isRequired,\n  pageProps: PropTypes.instanceOf(Object)\n};\n\nconst makestore = () => store;\n\nconst wrapper = createWrapper(makestore);\nexport default wrapper.withRedux(App);",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/_app.js"
    ],
    "names": [
      "React",
      "PropTypes",
      "ThemeProvider",
      "Provider",
      "useDispatch",
      "createWrapper",
      "authActions",
      "store",
      "theme",
      "Child",
      "Component",
      "pageProps",
      "dispatch",
      "init",
      "useCallback",
      "verifyAuth",
      "useEffect",
      "jssStyles",
      "document",
      "querySelector",
      "parentNode",
      "removeChild",
      "App",
      "props",
      "defaultProps",
      "propTypes",
      "instanceOf",
      "Object",
      "isRequired",
      "makestore",
      "wrapper",
      "withRedux"
    ],
    "mappings": ";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,YAAP;AACA,OAAO,mBAAP;AAEA,MAAMC,KAAK,GAAG,EAAd;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAMS,IAAI,GAAGb,KAAK,CAACc,WAAN,CAAkB,MAAM;AACnCF,IAAAA,QAAQ,CAACN,WAAW,CAACS,UAAZ,EAAD,CAAR;AACD,GAFY,EAEV,CAACH,QAAD,CAFU,CAAb;AAIAZ,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBH,IAAAA,IAAI;AACJ,UAAMI,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;AACA,QAAIF,SAAS,IAAIA,SAAS,CAACG,UAA3B,EACEH,SAAS,CAACG,UAAV,CAAqBC,WAArB,CAAiCJ,SAAjC;AACH,GALD,EAKG,EALH;AAOA,SACE,4BACE,MAAC,SAAD,EAAeN,SAAf,CADF,CADF;AAKD,CAnBD;;AAqBA,MAAMW,GAAG,GAAIC,KAAD,IAAW;AACrB,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB;AAAjB,KACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,KACE,mBACE,MAAC,KAAD,EAAWe,KAAX,CADF,CADF,CADF,CADF,CADF;AAWD,CAZD;;AAcAd,KAAK,CAACe,YAAN,GAAqB;AACnBb,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIAF,KAAK,CAACgB,SAAN,GAAkB;AAChBf,EAAAA,SAAS,EAAET,SAAS,CAACyB,UAAV,CAAqBC,MAArB,EAA6BC,UADxB;AAEhBjB,EAAAA,SAAS,EAAEV,SAAS,CAACyB,UAAV,CAAqBC,MAArB;AAFK,CAAlB;;AAKA,MAAME,SAAS,GAAG,MAAMtB,KAAxB;;AACA,MAAMuB,OAAO,GAAGzB,aAAa,CAACwB,SAAD,CAA7B;AAEA,eAAeC,OAAO,CAACC,SAAR,CAAkBT,GAAlB,CAAf",
    "sourcesContent": [
      "import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { authActions } from '../store/actions';\nimport store from '../services/redux';\nimport '../app.css';\nimport 'fontsource-roboto';\n\nconst theme = {};\n\nconst Child = ({ Component, pageProps }) => {\n  const dispatch = useDispatch();\n\n  const init = React.useCallback(() => {\n    dispatch(authActions.verifyAuth());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    init();\n    const jssStyles = document.querySelector('#jss-server-side');\n    if (jssStyles && jssStyles.parentNode)\n      jssStyles.parentNode.removeChild(jssStyles);\n  }, []);\n\n  return (\n    <>\n      <Component {...pageProps} />\n    </>\n  );\n};\n\nconst App = (props) => {\n  return (\n    <>\n      <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <div>\n            <Child {...props} />\n          </div>\n        </ThemeProvider>\n      </Provider>\n    </>\n  );\n};\n\nChild.defaultProps = {\n  pageProps: {}\n};\n\nChild.propTypes = {\n  Component: PropTypes.instanceOf(Object).isRequired,\n  pageProps: PropTypes.instanceOf(Object)\n};\n\nconst makestore = () => store;\nconst wrapper = createWrapper(makestore);\n\nexport default wrapper.withRedux(App);\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
