{
  "ast": null,
  "code": "var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Url = require('../models/url');\n\nvar deleteUrl = function deleteUrl() {\n  return null;\n};\n\nvar createShorturl = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, id, url, custom, urlDoc, updatedUrl, newUrl;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, id = _req$body.id, url = _req$body.url, custom = _req$body.custom;\n            _context.next = 3;\n            return Url.findOne({\n              userID: id\n            });\n\n          case 3:\n            urlDoc = _context.sent;\n            console.log(urlDoc);\n\n            if (!urlDoc) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 8;\n            return urlDoc.update(_objectSpread(_objectSpread({}, urlDoc), {}, {\n              URLS: _objectSpread(_objectSpread({}, urlDoc.URLS), {}, _defineProperty({}, custom, url))\n            }));\n\n          case 8:\n            updatedUrl = _context.sent;\n            res.status(200).json(updatedUrl);\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.next = 14;\n            return Url.create({\n              userID: id,\n              URLS: _defineProperty({}, custom, url)\n            });\n\n          case 14:\n            newUrl = _context.sent;\n            res.status(201).json(newUrl);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function createShorturl(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = {\n  deleteUrl: deleteUrl,\n  createShorturl: createShorturl\n};",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/controllers/url.js"
    ],
    "names": [
      "Url",
      "require",
      "deleteUrl",
      "createShorturl",
      "req",
      "res",
      "body",
      "id",
      "url",
      "custom",
      "findOne",
      "userID",
      "urlDoc",
      "console",
      "log",
      "update",
      "URLS",
      "updatedUrl",
      "status",
      "json",
      "create",
      "newUrl",
      "module",
      "exports"
    ],
    "mappings": ";;;;;;;;;;AAAA,IAAMA,GAAG,GAAGC,OAAO,CAAC,eAAD,CAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAO,IAAP;AACD,CAFD;;AAGA,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACOD,GAAG,CAACE,IADX,EACbC,EADa,aACbA,EADa,EACTC,GADS,aACTA,GADS,EACJC,MADI,aACJA,MADI;AAAA;AAAA,mBAGAT,GAAG,CAACU,OAAJ,CAAY;AAAEC,cAAAA,MAAM,EAAEJ;AAAV,aAAZ,CAHA;;AAAA;AAGfK,YAAAA,MAHe;AAIrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAJqB,iBAKjBA,MALiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMMA,MAAM,CAACG,MAAP,iCACpBH,MADoB;AAEvBI,cAAAA,IAAI,kCAAOJ,MAAM,CAACI,IAAd,2BAAqBP,MAArB,EAA8BD,GAA9B;AAFmB,eANN;;AAAA;AAMbS,YAAAA,UANa;AAUnBZ,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,UAArB;AAVmB;AAAA;;AAAA;AAAA;AAAA,mBAYEjB,GAAG,CAACoB,MAAJ,CAAW;AAAET,cAAAA,MAAM,EAAEJ,EAAV;AAAcS,cAAAA,IAAI,sBAAKP,MAAL,EAAcD,GAAd;AAAlB,aAAX,CAZF;;AAAA;AAYba,YAAAA,MAZa;AAanBhB,YAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,MAArB;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdlB,cAAc;AAAA;AAAA;AAAA,GAApB;;AAiBAmB,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,SAAS,EAATA,SADe;AAEfC,EAAAA,cAAc,EAAdA;AAFe,CAAjB",
    "sourcesContent": [
      "const Url = require('../models/url');\n\nconst deleteUrl = () => {\n  return null;\n};\nconst createShorturl = async (req, res) => {\n  const { id, url, custom } = req.body;\n\n  const urlDoc = await Url.findOne({ userID: id });\n  console.log(urlDoc);\n  if (urlDoc) {\n    const updatedUrl = await urlDoc.update({\n      ...urlDoc,\n      URLS: { ...urlDoc.URLS, [custom]: url }\n    });\n    res.status(200).json(updatedUrl);\n  } else {\n    const newUrl = await Url.create({ userID: id, URLS: { [custom]: url } });\n    res.status(201).json(newUrl);\n  }\n};\n\nmodule.exports = {\n  deleteUrl,\n  createShorturl\n};\n"
    ]
  },
  "metadata": {},
  "sourceType": "script"
}
