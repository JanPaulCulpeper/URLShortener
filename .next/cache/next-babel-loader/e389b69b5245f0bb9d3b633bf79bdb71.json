{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport Modal from '@material-ui/core/Modal';\nimport Card from '@material-ui/core/Card';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nconst Home = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const [values, setValues] = React.useState({});\n  const {\n    url,\n    custom\n  } = values;\n  const [current, setCurrent] = React.useState(null);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urlError = useSelector(urlSelectors.selectError);\n  const [open, setOpen] = React.useState(false);\n  const handleSubmit = React.useCallback(e => {\n    e.preventDefault();\n    setCurrent(custom);\n\n    if (authToken) {\n      dispatch(urlActions.shorten({\n        custom,\n        url\n      }));\n    } else {\n      router.push('/login');\n    }\n  }, [values, current]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  React.useEffect(() => {\n    if (urlError) toast(urlError, {\n      type: 'error'\n    });\n    if (current) setOpen(true);\n  }, [urlError]);\n  return __jsx(React.Fragment, null, !authToken && loading ? 'Loading...' : __jsx(React.Fragment, null, __jsx(ToastContainer, null), __jsx(Navigation, {\n    Title: \"URL-shortener\",\n    Links: [{\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Dashboard',\n          act: () => router.push('/dashboard')\n        }, {\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken === null || authToken === void 0 ? void 0 : authToken.userName[0]\n      })\n    }]\n  }), __jsx(Form, {\n    Title: \"Shorten your URL\",\n    ParentState: [values, setValues],\n    SubmitFunction: handleSubmit,\n    Inputs: [{\n      label: 'URL',\n      id: 'url',\n      type: 'text'\n    }, {\n      id: 'custom',\n      type: 'text',\n      exteriorLabel: `your-custom-path`\n    }],\n    LowerText: {\n      info: urls ? null : `${URL}${values.custom || 'your custom path'}`,\n      link: authToken ? {\n        name: urls ? `${URL}${current}` : null,\n        ref: urls ? `${URL}${current}` : null\n      } : {}\n    }\n  }), __jsx(Modal, {\n    \"aria-labelledby\": \"shortened-url\",\n    \"aria-describedby\": \"shortened-url\",\n    open: open,\n    onClose: handleClose,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Card, null, __jsx(\"a\", {\n    href: `${URL}${current}`\n  }, `${URL}${current}`)))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/luisfcaro/programming/semester-project-team-j/pages/index.js"],"names":["React","useSelector","useDispatch","ToastContainer","toast","useRouter","Modal","Card","Navigation","authSelectors","urlSelectors","authActions","urlActions","UserIcon","Form","URL","Home","router","dispatch","authToken","selectAuthToken","urls","selectUrls","values","setValues","useState","url","custom","current","setCurrent","loading","selectLoading","urlError","selectError","open","setOpen","handleSubmit","useCallback","e","preventDefault","shorten","push","handleClose","Logout","logout","useEffect","type","title","ref","condition","replacement","name","act","userName","label","id","exteriorLabel","info","link","timeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport Modal from '@material-ui/core/Modal';\nimport Card from '@material-ui/core/Card';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nimport Form from '../components/Form';\nimport URL from '../constants';\n\nconst Home = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const [values, setValues] = React.useState({});\n  const { url, custom } = values;\n  const [current, setCurrent] = React.useState(null);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urlError = useSelector(urlSelectors.selectError);\n  const [open, setOpen] = React.useState(false);\n\n  const handleSubmit = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      setCurrent(custom);\n      if (authToken) {\n        dispatch(\n          urlActions.shorten({\n            custom,\n            url\n          })\n        );\n      } else {\n        router.push('/login');\n      }\n    },\n    [values, current]\n  );\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  React.useEffect(() => {\n    if (urlError) toast(urlError, { type: 'error' });\n    if (current) setOpen(true);\n  }, [urlError]);\n\n  return (\n    <>\n      {!authToken && loading ? (\n        'Loading...'\n      ) : (\n        <>\n          <ToastContainer />\n          <Navigation\n            Title=\"URL-shortener\"\n            Links={[\n              {\n                title: 'Login',\n                ref: '/login',\n                condition: !!authToken,\n                replacement: (\n                  <UserIcon\n                    Actions={[\n                      {\n                        name: 'Dashboard',\n                        act: () => router.push('/dashboard')\n                      },\n                      { name: 'Logout', act: Logout }\n                    ]}\n                    Letter={authToken?.userName[0]}\n                  />\n                )\n              }\n            ]}\n          />\n          <Form\n            Title=\"Shorten your URL\"\n            ParentState={[values, setValues]}\n            SubmitFunction={handleSubmit}\n            Inputs={[\n              { label: 'URL', id: 'url', type: 'text' },\n              {\n                id: 'custom',\n                type: 'text',\n\n                exteriorLabel: `your-custom-path`\n              }\n            ]}\n            LowerText={{\n              info: urls\n                ? null\n                : `${URL}${values.custom || 'your custom path'}`,\n              link: authToken\n                ? {\n                    name: urls ? `${URL}${current}` : null,\n                    ref: urls ? `${URL}${current}` : null\n                  }\n                : {}\n            }}\n          />\n          <Modal\n            aria-labelledby=\"shortened-url\"\n            aria-describedby=\"shortened-url\"\n            open={open}\n            onClose={handleClose}\n            BackdropProps={{\n              timeout: 500\n            }}\n          >\n            <Card>\n              <a href={`${URL}${current}`}>{`${URL}${current}`}</a>\n            </Card>\n          </Modal>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}