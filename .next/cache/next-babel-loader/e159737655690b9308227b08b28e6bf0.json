{
  "ast": null,
  "code": "var __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Card, CardContent, Typography, Container, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport { useRouter } from 'next/router';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    flexGrow: 1\n  },\n  ref: {\n    '&:hover': {\n      color: orange[500]\n    },\n    color: blue[500]\n  },\n  delete: {\n    marginBottom: 10\n  }\n});\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urls = useSelector(urlSelectors.selectUrls);\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n  const onDelete = React.useCallback(key => {\n    dispatch(urlActions.deleteUrl(key));\n  }, [dispatch]);\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n  if (!loading && !authToken) return __jsx(React.Fragment, null, authToken ? __jsx(React.Fragment, null, __jsx(Navigation, {\n    Title: \"Dashboard\",\n    Links: [{\n      title: 'Shortening',\n      ref: '/'\n    }, {\n      title: 'Login',\n      ref: '/login',\n      condition: !!authToken,\n      replacement: __jsx(UserIcon, {\n        Actions: [{\n          name: 'Logout',\n          act: Logout\n        }],\n        Letter: authToken ? authToken.userName[0] : null\n      })\n    }]\n  }), __jsx(Container, {\n    className: classes.root\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Account Info\")), __jsx(CardContent, null, __jsx(Typography, null, \"username: \", authToken.userName), __jsx(Typography, null, \"email: \", authToken.email, \" \"))), __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"History\"), Object.keys(urls || {}).map(key => __jsx(Container, {\n    className: classes.container\n  }, __jsx(Typography, {\n    key: key\n  }, key), __jsx(Grid, {\n    container: true,\n    direction: \"row\"\n  }, __jsx(SubdirectoryArrowRightIcon, null), __jsx(\"div\", {\n    className: classes.link\n  }, __jsx(\"a\", {\n    className: classes.ref,\n    href: urls[key]\n  }, urls[key])), __jsx(Button, {\n    size: \"small\",\n    className: classes.delete,\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: () => onDelete(key)\n  }, \"delete\"))))), __jsx(CardContent, null))), ' ') : 'Loading...');\n};\n\nexport default Dashboard;",
  "map": {
    "version": 3,
    "sources": [
      "/home/luisfcaro/programming/semester-project-team-j/pages/dashboard.js"
    ],
    "names": [
      "React",
      "useSelector",
      "useDispatch",
      "Card",
      "CardContent",
      "Typography",
      "Container",
      "Grid",
      "Button",
      "makeStyles",
      "SubdirectoryArrowRightIcon",
      "blue",
      "orange",
      "useRouter",
      "Navigation",
      "authSelectors",
      "urlSelectors",
      "authActions",
      "urlActions",
      "UserIcon",
      "useStyles",
      "root",
      "marginTop",
      "container",
      "borderBottom",
      "marginBottom",
      "link",
      "flexGrow",
      "ref",
      "color",
      "delete",
      "Dashboard",
      "router",
      "classes",
      "dispatch",
      "authToken",
      "selectAuthToken",
      "loading",
      "selectLoading",
      "urls",
      "selectUrls",
      "Logout",
      "useCallback",
      "logout",
      "Fetch",
      "fetchUrls",
      "onDelete",
      "key",
      "deleteUrl",
      "useEffect",
      "title",
      "condition",
      "replacement",
      "name",
      "act",
      "userName",
      "email",
      "Object",
      "keys",
      "map"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Container,\n  Grid,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport { useRouter } from 'next/router';\nimport Navigation from '../components/Navigation';\nimport { authSelectors, urlSelectors } from '../store/selectors';\nimport { authActions, urlActions } from '../store/actions';\nimport UserIcon from '../components/UserIcon';\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: 30\n  },\n  container: {\n    borderBottom: '1px solid #ebebeb ',\n    marginBottom: 10\n  },\n  link: {\n    flexGrow: 1\n  },\n  ref: {\n    '&:hover': { color: orange[500] },\n    color: blue[500]\n  },\n  delete: { marginBottom: 10 }\n});\n\nconst Dashboard = () => {\n  const router = useRouter();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authToken = useSelector(authSelectors.selectAuthToken);\n  const loading = useSelector(authSelectors.selectLoading);\n  const urls = useSelector(urlSelectors.selectUrls);\n\n  const Logout = React.useCallback(async () => {\n    dispatch(authActions.logout());\n  }, [dispatch, authActions]);\n\n  const Fetch = React.useCallback(async () => {\n    await dispatch(urlActions.fetchUrls());\n  }, [dispatch]);\n\n  const onDelete = React.useCallback(\n    (key) => {\n      dispatch(urlActions.deleteUrl(key));\n    },\n    [dispatch]\n  );\n  React.useEffect(() => {\n    Fetch();\n  }, []);\n\n  if (!loading && !authToken)\n    return (\n      <>\n        {authToken ? (\n          <>\n            <Navigation\n              Title=\"Dashboard\"\n              Links={[\n                {\n                  title: 'Shortening',\n                  ref: '/'\n                },\n                {\n                  title: 'Login',\n                  ref: '/login',\n                  condition: !!authToken,\n                  replacement: (\n                    <UserIcon\n                      Actions={[{ name: 'Logout', act: Logout }]}\n                      Letter={authToken ? authToken.userName[0] : null}\n                    />\n                  )\n                }\n              ]}\n            />\n            <Container className={classes.root}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h4\">Account Info</Typography>\n                </CardContent>\n                <CardContent>\n                  <Typography>username: {authToken.userName}</Typography>\n                  <Typography>email: {authToken.email} </Typography>\n                </CardContent>\n              </Card>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h4\">History</Typography>\n                  {Object.keys(urls || {}).map((key) => (\n                    <Container className={classes.container}>\n                      <Typography key={key}>{key}</Typography>\n                      <Grid container direction=\"row\">\n                        <SubdirectoryArrowRightIcon />\n                        <div className={classes.link}>\n                          <a className={classes.ref} href={urls[key]}>\n                            {urls[key]}\n                          </a>\n                        </div>\n                        <Button\n                          size=\"small\"\n                          className={classes.delete}\n                          variant=\"contained\"\n                          color=\"secondary\"\n                          onClick={() => onDelete(key)}\n                        >\n                          delete\n                        </Button>\n                      </Grid>\n                    </Container>\n                  ))}\n                </CardContent>\n                <CardContent />\n              </Card>\n            </Container>{' '}\n          </>\n        ) : (\n          'Loading...'\n        )}\n      </>\n    );\n};\n\nexport default Dashboard;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
