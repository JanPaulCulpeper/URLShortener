{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { urlTypes } from './types';\nimport URL from '../../constants';\nvar SHORTEN_ERROR = urlTypes.SHORTEN_ERROR,\n    SHORTEN_LOADING = urlTypes.SHORTEN_LOADING,\n    SHORTEN_URL_SUCCESS = urlTypes.SHORTEN_URL_SUCCESS,\n    FETCH_URLS_SUCCESS = urlTypes.FETCH_URLS_SUCCESS,\n    DELETE_URL_SUCCESS = urlTypes.DELETE_URL_SUCCESS;\nexport var shorten = function shorten(_ref) {\n  var url = _ref.url,\n      custom = _ref.custom;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(URL, \"api/url/create\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  url: url,\n                  custom: custom\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context.sent;\n              if (res.status === 201) dispatch({\n                type: SHORTEN_URL_SUCCESS,\n                payload: data\n              });else {\n                dispatch({\n                  type: SHORTEN_ERROR,\n                  payload: data\n                });\n              }\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchUrls = function fetchUrls() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(\"\".concat(URL, \"api/url/all\"));\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context2.sent;\n              dispatch({\n                type: FETCH_URLS_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context2.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 11]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteUrl = function deleteUrl(key) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: SHORTEN_LOADING\n              });\n              _context3.prev = 1;\n              _context3.next = 4;\n              return fetch(\"\".concat(URL, \"api/url/delete\"), {\n                method: 'POST',\n                body: JSON.stringify({\n                  key: key\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context3.sent;\n              _context3.next = 7;\n              return res.json();\n\n            case 7:\n              data = _context3.sent;\n              dispatch({\n                type: DELETE_URL_SUCCESS,\n                payload: data\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              dispatch({\n                type: SHORTEN_ERROR,\n                payload: _context3.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 11]]);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
